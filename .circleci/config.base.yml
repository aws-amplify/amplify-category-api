version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
machine:
  environment:
    PATH: "${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin"

executors:
  w: &windows-e2e-executor
    machine:
      image: "windows-server-2022-gui:current"
      resource_class: "windows.medium"
      shell: bash.exe
    working_directory: ~/repo
    environment:
      AMPLIFY_DIR: C:/home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli-internal/bin
      AMPLIFY_PATH: C:/home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli-internal/bin/amplify

  l: &linux-e2e-executor
    docker:
      - image: public.ecr.aws/j4f5f3h7/amplify-cli-e2e-base-image-repo-public:node18
    working_directory: ~/repo
    resource_class: large
    environment:
      AMPLIFY_DIR: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli-internal/bin
      AMPLIFY_PATH: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli-internal/bin/amplify

defaults: &defaults
  working_directory: ~/repo
  parameters:
    os:
      type: executor
      default: l
  executor: << parameters.os >>

scan_e2e_test_artifacts: &scan_e2e_test_artifacts
  name: Scan And Cleanup E2E Test Artifacts
  no_output_timeout: 60m
  command: |
    if ! yarn ts-node .circleci/scan_artifacts.ts; then
      echo "Cleaning the repository"
      git clean -fdx
      exit 1
    fi
  when: always

install_cli_from_local_registry: &install_cli_from_local_registry
  name: Start verdaccio, install CLI
  command: |
    source .circleci/local_publish_helpers.sh
    startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
    setNpmRegistryUrlToLocal
    changeNpmGlobalPath
    npm install -g @aws-amplify/cli-internal
    echo "using Amplify CLI version: "$(amplify --version)
    unsetNpmRegistryUrl

jobs:
  build:
    parameters:
      os:
        type: executor
        default: l
    executor: << parameters.os >>
    steps:
      - checkout
      - when:
          condition:
            equal: [*windows-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Install Node 18
                command: |
                  nvm version
                  nvm install 18.15.0
                  nvm use 18.15.0
                  nvm ls
            - run:
                name: Install Yarn
                command: |
                  npm install -g yarn
                  yarn --version
      - run:
          name: Check node version
          command: node -v
      - run: yarn run production-build
      - run:
          name: Build tests
          command: yarn build-tests
      - save_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache
      - save_cache:
          key: amplify-category-api-ssh-deps-{{ .Branch }}
          paths:
            - ~/.ssh
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - persist_to_workspace:
                root: .
                paths: .

  test:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run tests
          command: yarn test-ci
      - run:
          name: Collect code coverage
          command: yarn coverage
    environment:
      NODE_OPTIONS: --max-old-space-size=5120

  validate_cdk_version:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Validate cdk version
          command: |
            yarn ts-node .circleci/validate_cdk_version.ts

  lint:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run: chmod +x .circleci/lint_pr.sh && ./.circleci/lint_pr.sh

  verify-api-extract:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run: yarn verify-api-extract

  verify-yarn-lock:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run: |
          yarn config set registry https://registry.npmjs.org
          yarn verify-yarn-lock

  mock_e2e_tests:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run Transformer end-to-end tests with mock server
          command: |
            source .circleci/local_publish_helpers.sh
            cd packages/amplify-util-mock/
            yarn e2e
          no_output_timeout: 60m
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
            NODE_OPTIONS: --max-old-space-size=5120
      - store_test_results:
          path: packages/amplify-util-mock/

  publish_to_local_registry:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Publish to verdaccio
          command: |
            source .circleci/local_publish_helpers.sh
            startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
            setNpmRegistryUrlToLocal
            git config user.email not@used.com
            git config user.name "Doesnt Matter"
            setNpmTag
            # publish private package to verdaccio for e2e tests
            cat packages/amplify-graphql-api-construct/package.json > stash.json
            jq 'del(.private)' packages/amplify-graphql-api-construct/package.json > tmp.json
            mv tmp.json packages/amplify-graphql-api-construct/package.json
            if [ -z $NPM_TAG ]; then
              yarn publish-to-verdaccio
            else
              yarn lerna publish --exact --dist-tag=latest --preid=$NPM_TAG --conventional-commits --conventional-prerelease --no-verify-access --yes --no-commit-hooks --no-push --no-git-tag-version
            fi
            mv stash.json packages/amplify-graphql-api-construct/package.json
            unsetNpmRegistryUrl
      - run:
          name: Generate unified changelog
          command: |
            git reset --hard HEAD
            yarn update-versions
            yarn ts-node scripts/unified-changelog.ts
      - save_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/verdaccio-cache/
      - save_cache:
          key: amplify-unified-changelog-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/repo/UNIFIED_CHANGELOG.md

  graphql_e2e_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run GraphQL end-to-end tests
          command: |
            source .circleci/local_publish_helpers.sh
            cd packages/graphql-transformers-e2e-tests/
            retry yarn e2e --maxWorkers=3 $TEST_SUITE
          environment:
            AMPLIFY_CLI_DISABLE_LOGGING: "true"
          no_output_timeout: 60m
      - store_test_results:
          path: packages/graphql-transformers-e2e-tests/

  amplify_e2e_tests:
    parameters:
      os:
        type: executor
        default: l
    executor: << parameters.os >>
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: >-
            amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{
            arch }}
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-build-artifact-{{ .Revision }}-{{ arch }}
      - install_yarn:
          os: << parameters.os >>
      - run: *install_cli_from_local_registry
      - run_e2e_tests:
          os: << parameters.os >>
      - scan_e2e_test_artifacts:
          os: << parameters.os >>
      - store_test_results:
          path: packages/amplify-e2e-tests/
      - store_artifacts:
          path: packages/amplify-e2e-tests/amplify-e2e-reports

  client_e2e_tests:
    parameters:
      os:
        type: executor
        default: l
    executor: << parameters.os >>
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: >-
            amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{
            arch }}
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-build-artifact-{{ .Revision }}-{{ arch }}
      - install_yarn:
          os: << parameters.os >>
      - run: *install_cli_from_local_registry
      - run_client_tests:
          os: << parameters.os >>
      - scan_e2e_test_artifacts:
          os: << parameters.os >>
      - store_test_results:
          path: client-test-apps/js/api-model-relationship-app/test-results
      - store_artifacts:
          path: client-test-apps/js/api-model-relationship-app/cypress/screenshots
      - store_artifacts:
          path: client-test-apps/js/api-model-relationship-app/cypress/videos
      - run:
          name: Emit Canary Success Metric
          command: |
            source .circleci/local_publish_helpers.sh
            emitCanarySuccessMetric
      - run:
          name: Emit Canary Failure Metric
          command: |
              source .circleci/local_publish_helpers.sh
              emitCanaryFailureMetric
          when: on_fail

  amplify_migration_tests_v5:
    <<: *defaults
    environment:
      AMPLIFY_PATH: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli/bin/amplify
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run tests migrating from CLI v5.2.0
          command: |
            yarn setup-dev
            source .circleci/local_publish_helpers.sh
            changeNpmGlobalPath
            cd packages/amplify-migration-tests
            retry yarn run migration_v5.2.0 --maxWorkers=3 $TEST_SUITE
          no_output_timeout: 60m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-migration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-migration-tests/amplify-migration-reports
    working_directory: ~/repo

  amplify_migration_tests_v6:
    <<: *defaults
    environment:
      AMPLIFY_PATH: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli/bin/amplify
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run tests migrating from CLI v6.1.0
          command: |
            yarn setup-dev
            source .circleci/local_publish_helpers.sh
            changeNpmGlobalPath
            cd packages/amplify-migration-tests
            retry yarn run migration_v6.1.0 --maxWorkers=3 $TEST_SUITE
          no_output_timeout: 60m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-migration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-migration-tests/amplify-migration-reports
    working_directory: ~/repo

  amplify_migration_tests_v10:
    <<: *defaults
    environment:
      AMPLIFY_PATH: /home/circleci/.amplify/bin/amplify
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run tests migrating from CLI v10.5.1
          command: |
            yarn setup-dev
            source .circleci/local_publish_helpers.sh
            changeNpmGlobalPath
            cd packages/amplify-migration-tests
            unset IS_AMPLIFY_CI
            echo $IS_AMPLIFY_CI
            retry yarn run migration_v10.5.1 --maxWorkers=3 $TEST_SUITE
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: ~/repo/packages/amplify-migration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-migration-tests/amplify-migration-reports
    working_directory: ~/repo

  deploy:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - amplify-category-api-ssh-deps-{{ .Branch }}
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish packages to NPM
          command: |
            bash ./.circleci/publish.sh
      - run: *scan_e2e_test_artifacts

  post_deploy:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - amplify-category-api-ssh-deps-{{ .Branch }}
      - install_github_cli
      - run:
          name: Run Post Publish Tasks
          command: ./.circleci/post_publish.sh

  cleanup_resources:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: "Run cleanup script"
          command: |
            cd packages/amplify-e2e-tests
            yarn clean-e2e-resources
          no_output_timeout: 60m
      - run:
          name: "Cleanup Stale Buckets"
          command: |
            cd packages/amplify-e2e-tests
            yarn cleanup-stale-test-buckets
          no_output_timeout: 30m
      - run: *scan_e2e_test_artifacts
      - store_artifacts:
          path: ~/repo/packages/amplify-e2e-tests/amplify-e2e-reports
    working_directory: ~/repo

  cleanup_resources_after_e2e_runs:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: "Run cleanup script"
          command: |
            cd packages/amplify-e2e-tests
            yarn clean-e2e-resources workflow ${CIRCLE_WORKFLOW_ID}
          no_output_timeout: 60m
      - run: *scan_e2e_test_artifacts
      - store_artifacts:
          path: ~/repo/packages/amplify-e2e-tests/amplify-e2e-reports
    working_directory: ~/repo

  wait_for_all:
    <<: *linux-e2e-executor
    steps:
      - run:
          name: 'Wait for all required jobs to finish'
          command: |
              while [[ $(curl --location --request GET "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/job" --header "Circle-Token: $CIRCLECI_TOKEN"| jq -r '.items[]|select(.name != "wait_for_all")|.status' | grep -c "running") -gt 0 ]]
                do
                  sleep 60
                done
          no_output_timeout: 180m
    working_directory: ~/repo

workflows:
  version: 2
  e2e_resource_cleanup:
    triggers:
      - schedule:
          cron: "45 0,12 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build
      - cleanup_resources:
          context:
            - api-cleanup-resources
            - api-e2e-test-context
          requires:
            - build
  canary:
    triggers:
      - schedule:
          cron: "13 0,6,12,18 * * *" # Run 4 times daily, on the 13th minute of the hour
          filters:
            branches:
              only:
                - main
    jobs:
      - build
      - publish_to_local_registry:
          requires:
            - build
      - client_e2e_tests:
          context:
            - api-cleanup-resources
            - e2e-auth-credentials
            - api-e2e-test-context
          requires:
            - publish_to_local_registry
  build_test_deploy:
    jobs:
      - build:
          name: build_linux
          os: l

      - build:
          name: build_windows
          os: w
      - lint:
          requires:
            - build_linux
      - validate_cdk_version:
          requires:
            - build_linux
      - verify-api-extract:
          requires:
            - build_linux
      - verify-yarn-lock:
          requires:
            - build_linux
      - test:
          requires:
            - build_linux
      - mock_e2e_tests:
          requires:
            - build_linux
      - graphql_e2e_tests:
          context:
            - api-e2e-test-context
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - publish_to_local_registry
      - publish_to_local_registry:
          filters:
            branches:
              only:
                - main
                - beta
                - /tagged-release\/.*/
                - /tagged-release-without-e2e-tests\/.*/
                - /run-e2e\/.*/
          requires:
            - build_linux
      - amplify_e2e_tests:
          context:
            - api-cleanup-resources
            - e2e-auth-credentials
            - api-e2e-test-context
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - publish_to_local_registry
      - client_e2e_tests:
          context:
            - api-cleanup-resources
            - e2e-auth-credentials
            - api-e2e-test-context
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - publish_to_local_registry
      - amplify_migration_tests_v6:
          context:
            - e2e-auth-credentials
            - api-cleanup-resources
            - api-e2e-test-context
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - publish_to_local_registry
      - amplify_migration_tests_v10:
          context:
            - e2e-auth-credentials
            - api-cleanup-resources
            - api-e2e-test-context
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - publish_to_local_registry
      - amplify_migration_tests_v5:
          context:
            - e2e-auth-credentials
            - api-cleanup-resources
            - api-e2e-test-context
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - publish_to_local_registry
      - wait_for_all:
          context:
            - api-cleanup-resources
            - api-e2e-test-context
          requires:
            - build_linux
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/

      - cleanup_resources_after_e2e_runs:
          context:
            - api-cleanup-resources
            - api-e2e-test-context
          requires:
            - wait_for_all
          filters:
            branches:
              only:
                - main
                - /tagged-release\/.*/
                - /run-e2e\/.*/
      - deploy:
          context:
            - e2e-auth-credentials
            - api-e2e-test-context
            - api-npm-publish
          requires:
            - test
            - build_windows
            - mock_e2e_tests
            - graphql_e2e_tests
            - amplify_e2e_tests
            - client_e2e_tests
            - amplify_migration_tests_v10
            - amplify_migration_tests_v6
            - amplify_migration_tests_v5
          filters:
            branches:
              only:
                - release
                - main
                - beta
                - /tagged-release\/.*/
                - /tagged-release-without-e2e-tests\/.*/
      - post_deploy:
          requires:
            - deploy
          filters:
            branches:
              only:
                - release
commands:
  install_yarn:
    description: "Install yarn dependency for windows"
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*windows-e2e-executor, << parameters.os >>]
          steps:
            - run: yarn --cache-folder ~/.cache/yarn

  install_java:
    description: "Install Java on Linux and Docker images"
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Install Java
                command: |
                  sudo apt-get update && sudo apt-get install default-jdk

  install_github_cli:
    description: "Install Github CLI tool"
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Install Github CLI
                command: |
                  type -p curl >/dev/null || sudo apt install curl -y
                  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
                  && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
                  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
                  && sudo apt update \
                  && sudo apt install gh -y

  run_e2e_tests:
    description: "Run Amplify E2E tests"
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*windows-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Run E2e Tests
                shell: bash.exe
                command: |
                  source .circleci/local_publish_helpers.sh
                  startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
                  setNpmRegistryUrlToLocal
                  cd packages/amplify-e2e-tests
                  retry yarn run e2e --detectOpenHandles --maxWorkers=3 $TEST_SUITE
                  unsetNpmRegistryUrl
                no_output_timeout: 60m
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Run E2e Tests
                command: |
                  echo "export PATH=$AMPLIFY_DIR:$PATH" >> $BASH_ENV
                  source $BASH_ENV
                  source .circleci/local_publish_helpers.sh
                  startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
                  setNpmRegistryUrlToLocal
                  amplify version
                  retry runE2eTest
                  unsetNpmRegistryUrl
                no_output_timeout: 90m
  scan_e2e_test_artifacts:
    description: "Scan And Cleanup E2E Test Artifacts"
    parameters:
      os:
        type: executor
        default: l
    steps:
      - run:
          name: Scan E2E artifacts
          no_output_timeout: 60m
          command: |
            if ! yarn ts-node .circleci/scan_artifacts.ts; then
              echo "Cleaning the repository"
              git clean -fdx
              exit 1
            fi
          when: always
  run_client_tests:
    description: "Run Amplify Client tests"
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*windows-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Run Client Tests
                shell: bash.exe
                command: |
                  source .circleci/local_publish_helpers.sh
                  export CLI_REGION=us-west-2
                  cd client-test-apps/js/api-model-relationship-app
                  npm install
                  retry npm run test:ci
                no_output_timeout: 60m
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Run E2e Tests
                command: |
                  echo "export PATH=$AMPLIFY_DIR:$PATH" >> $BASH_ENV
                  source $BASH_ENV
                  source .circleci/local_publish_helpers.sh
                  export CLI_REGION=us-west-2
                  cd client-test-apps/js/api-model-relationship-app
                  yarn
                  retry yarn test:ci
                no_output_timeout: 60m
