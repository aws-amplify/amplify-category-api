version: 2.1

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# the continuation orb is required in order to use dynamic configuration
orbs:
  continuation: circleci/continuation@0.1.2

parameters:
  e2e_resource_cleanup:
    type: boolean
    default: false
  setup:
    type: boolean
    default: true
  canary:
    type: boolean
    default: false

executors:
  linux: &linux-e2e-executor
    docker:
      - image: public.ecr.aws/j4f5f3h7/amplify-cli-e2e-base-image-repo-public:latest
    working_directory: ~/repo
    resource_class: large
    environment:
      AMPLIFY_DIR: /home/circleci/repo/out
      AMPLIFY_PATH: /home/circleci/repo/out/amplify-pkg-linux-x64

install_cli_from_local_registry: &install_cli_from_local_registry
  name: Start verdaccio, install CLI
  command: |
    source .circleci/local_publish_helpers.sh
    startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
    setNpmRegistryUrlToLocal
    changeNpmGlobalPath
    npm install -g @aws-amplify/cli-internal
    echo "using Amplify CLI version: "$(amplify --version)
    unsetNpmRegistryUrl

# our defined job, and its steps
jobs:
  setup:
    executor: 'linux'
    steps:
      - checkout # checkout code
      - run: # run a command
          name: Generate config
          command: |
            cd scripts
            yarn
            yarn split-e2e-tests
      - continuation/continue:
          configuration_path: .circleci/generated_config.yml # use newly generated config to continue
  build:
    parameters:
      os:
        type: executor
        default: linux
    executor: << parameters.os >>
    steps:
      - checkout
      - run: yarn run production-build
      - save_cache:
          key: >-
            amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{
            arch }}
          paths:
            - ~/.cache
      - save_cache:
          key: amplify-category-api-ssh-deps-{{ .Branch }}
          paths:
            - ~/.ssh
      - when:
          condition:
            equal:
              - docker:
                  - image: >-
                      public.ecr.aws/j4f5f3h7/amplify-cli-e2e-base-image-repo-public:latest
                working_directory: ~/repo
                resource_class: large
                environment:
                  AMPLIFY_DIR: /home/circleci/repo/out
                  AMPLIFY_PATH: /home/circleci/repo/out/amplify-pkg-linux-x64
              - << parameters.os >>
          steps:
            - persist_to_workspace:
                root: .
                paths: .
  cleanup_resources:
    docker:
      - image: public.ecr.aws/j4f5f3h7/amplify-cli-e2e-base-image-repo-public:latest
    working_directory: ~/repo
    resource_class: large
    environment:
      AMPLIFY_DIR: /home/circleci/repo/out
      AMPLIFY_PATH: /home/circleci/repo/out/amplify-pkg-linux-x64
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: >-
            amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{
            arch }}
      - run:
          name: Run cleanup script
          command: |
            cd packages/amplify-e2e-tests
            yarn clean-e2e-resources
          no_output_timeout: 90m
      - run:
          name: Scan And Cleanup E2E Test Artifacts
          command: |
            if ! yarn ts-node .circleci/scan_artifacts.ts; then
              echo "Cleaning the repository"
              git clean -fdx
              exit 1
            fi
          when: always
      - store_artifacts:
          path: ~/repo/packages/amplify-e2e-tests/amplify-e2e-reports
  publish_to_local_registry:
    docker:
      - image: public.ecr.aws/j4f5f3h7/amplify-cli-e2e-base-image-repo-public:latest
    working_directory: ~/repo
    resource_class: large
    environment:
      AMPLIFY_DIR: /home/circleci/repo/out
      AMPLIFY_PATH: /home/circleci/repo/out/amplify-pkg-linux-x64
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Publish to verdaccio
          command: |
            source .circleci/local_publish_helpers.sh
            startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
            setNpmRegistryUrlToLocal
            git config user.email not@used.com
            git config user.name "Doesnt Matter"
            setNpmTag
            if [ -z $NPM_TAG ]; then
              yarn publish-to-verdaccio
            else
              yarn lerna publish --exact --dist-tag=latest --preid=$NPM_TAG --conventional-commits --conventional-prerelease --no-verify-access --yes --no-commit-hooks --no-push --no-git-tag-version
            fi
            unsetNpmRegistryUrl
      - run:
          name: Generate unified changelog
          command: |
            git reset --hard HEAD
            yarn update-versions
            yarn ts-node scripts/unified-changelog.ts
      - save_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/verdaccio-cache/
      - save_cache:
          key: amplify-unified-changelog-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/repo/UNIFIED_CHANGELOG.md
  client_e2e_tests:
    environment:
      AMPLIFY_PATH: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli-internal/bin/amplify
    executor: 'linux'
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: >-
            amplify-category-api-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{
            arch }}
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-build-artifact-{{ .Revision }}-{{ arch }}
      - run: *install_cli_from_local_registry
      - run_client_tests
      - scan_e2e_test_artifacts
      - store_test_results:
          path: client-test-apps/js/api-model-relationship-app/test-results
      - store_artifacts:
          path: client-test-apps/js/api-model-relationship-app/cypress/screenshots
      - store_artifacts:
          path: client-test-apps/js/api-model-relationship-app/cypress/videos
      - run:
          name: Emit Canary Success Metric
          command: |
            source .circleci/local_publish_helpers.sh
            emitCanarySuccessMetric
      - run:
          name: Emit Canary Failure Metric
          command: |
              source .circleci/local_publish_helpers.sh
              emitCanaryFailureMetric
          when: on_fail

# our single workflow, that triggers the setup job defined above
workflows:
  setup:
    when: << pipeline.parameters.setup >>
    jobs:
      - setup
  e2e_resource_cleanup:
    when: << pipeline.parameters.e2e_resource_cleanup >>
    jobs:
      - build
      - cleanup_resources:
          context:
            - api-cleanup-resources
            - api-e2e-test-context
          requires:
            - build
  canary:
    when: << pipeline.parameters.canary >>
    jobs:
      - build
      - publish_to_local_registry:
          requires:
            - build
      - client_e2e_tests:
          context:
            - api-cleanup-resources
            - e2e-auth-credentials
            - api-e2e-test-context
          requires:
            - publish_to_local_registry

commands:
  scan_e2e_test_artifacts:
    description: "Scan And Cleanup E2E Test Artifacts"
    steps:
      - run:
          name: Scan E2E artifacts
          no_output_timeout: 90m
          command: |
            if ! yarn ts-node .circleci/scan_artifacts.ts; then
              echo "Cleaning the repository"
              git clean -fdx
              exit 1
            fi
          when: always
  run_client_tests:
    description: "Run Amplify Client tests"
    steps:
      - run:
          name: Run E2e Tests
          command: |
            echo "export PATH=$AMPLIFY_DIR:$PATH" >> $BASH_ENV
            source $BASH_ENV
            source .circleci/local_publish_helpers.sh
            export CLI_REGION=us-west-2
            cd client-test-apps/js/api-model-relationship-app
            yarn
            retry yarn test:ci
          no_output_timeout: 60m
