// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Field name conversions infers refersTo from column names 1`] = `
"type Profile @refersTo(name: \\"profile\\") @model {
  id: String! @primaryKey
  details: String @refersTo(name: \\"Details\\") @index(name: \\"profilesByDetails\\")
}

type User @refersTo(name: \\"users\\") @model {
  id: String! @refersTo(name: \\"Id\\") @primaryKey(sortKeyFields: [\\"nameField\\"])
  nameField: String @refersTo(name: \\"name_field\\")
}
"
`;

exports[`Type name conversions infers refersTo from model name 1`] = `
"type Profile @refersTo(name: \\"profile\\") @model {
  id: String! @primaryKey
  details: String
}

type User @refersTo(name: \\"users\\") @model {
  id: String! @primaryKey
  name: String
}
"
`;

exports[`enum imports enum values with single character 1`] = `
"type User @refersTo(name: \\"users\\") @model {
  id: String! @primaryKey
  name: String
  status: UserStatus
}

enum UserStatus {
  A
  D
  B
}
"
`;

exports[`enum imports generates enum imports 1`] = `
"type User @refersTo(name: \\"users\\") @model {
  id: String! @primaryKey
  name: String
  status: UserStatus
}

enum UserStatus {
  ACTIVE
  INACTIVE
}
"
`;

exports[`enum imports generates nonnull enum types correctly 1`] = `
"type User @refersTo(name: \\"users\\") @model {
  id: String! @primaryKey
  name: String
  status: UserStatus!
}

enum UserStatus {
  ACTIVE
  INACTIVE
}
"
`;

exports[`enum imports multiple enum fields of same name must generate one graphql enum type 1`] = `
"type Profile @refersTo(name: \\"profile\\") @model {
  id: String! @primaryKey
  details: String
  profilestatus: UserStatus
}

type User @refersTo(name: \\"users\\") @model {
  id: String! @primaryKey
  name: String
  status: UserStatus
}

enum UserStatus {
  ACTIVE
  INACTIVE
}
"
`;
