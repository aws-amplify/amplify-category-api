// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SequenceTransformer: should successfully transform simple valid schema 1`] = `
"type CoffeeQueue {
  id: ID!
  orderNumber: Int!
  name: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelCoffeeQueueConnection {
  items: [CoffeeQueue]!
  nextToken: String
}

input ModelCoffeeQueueFilterInput {
  id: ModelIDInput
  orderNumber: ModelIntInput
  name: ModelStringInput
  and: [ModelCoffeeQueueFilterInput]
  or: [ModelCoffeeQueueFilterInput]
  not: ModelCoffeeQueueFilterInput
}

type Query {
  getCoffeeQueue(id: ID!): CoffeeQueue
  listCoffeeQueues(id: ID, filter: ModelCoffeeQueueFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelCoffeeQueueConnection
}

input ModelCoffeeQueueConditionInput {
  orderNumber: ModelIntInput
  name: ModelStringInput
  and: [ModelCoffeeQueueConditionInput]
  or: [ModelCoffeeQueueConditionInput]
  not: ModelCoffeeQueueConditionInput
}

input CreateCoffeeQueueInput {
  id: ID
  orderNumber: Int
  name: String
}

input UpdateCoffeeQueueInput {
  id: ID!
  orderNumber: Int
  name: String
}

input DeleteCoffeeQueueInput {
  id: ID!
}

type Mutation {
  createCoffeeQueue(input: CreateCoffeeQueueInput!, condition: ModelCoffeeQueueConditionInput): CoffeeQueue
  updateCoffeeQueue(input: UpdateCoffeeQueueInput!, condition: ModelCoffeeQueueConditionInput): CoffeeQueue
  deleteCoffeeQueue(input: DeleteCoffeeQueueInput!, condition: ModelCoffeeQueueConditionInput): CoffeeQueue
}

input ModelSubscriptionCoffeeQueueFilterInput {
  id: ModelSubscriptionIDInput
  orderNumber: ModelSubscriptionIntInput
  name: ModelSubscriptionStringInput
  and: [ModelSubscriptionCoffeeQueueFilterInput]
  or: [ModelSubscriptionCoffeeQueueFilterInput]
}

type Subscription {
  onCreateCoffeeQueue(filter: ModelSubscriptionCoffeeQueueFilterInput): CoffeeQueue @aws_subscribe(mutations: [\\"createCoffeeQueue\\"])
  onUpdateCoffeeQueue(filter: ModelSubscriptionCoffeeQueueFilterInput): CoffeeQueue @aws_subscribe(mutations: [\\"updateCoffeeQueue\\"])
  onDeleteCoffeeQueue(filter: ModelSubscriptionCoffeeQueueFilterInput): CoffeeQueue @aws_subscribe(mutations: [\\"deleteCoffeeQueue\\"])
}
"
`;
