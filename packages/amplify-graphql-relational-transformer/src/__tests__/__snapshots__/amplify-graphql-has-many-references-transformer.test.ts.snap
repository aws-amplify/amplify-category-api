// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@hasMany directive with RDS datasource composite key should generate correct resolvers 1`] = `
"type System {
  systemId: String!
  systemName: String!
  details: String
  parts(filter: ModelPartFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelPartConnection
}

type Part {
  partId: String!
  partName: String
  systemId: String!
  systemName: String!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelSystemConnection {
  items: [System]!
  nextToken: String
}

input ModelSystemFilterInput {
  systemId: ModelStringInput
  systemName: ModelStringInput
  details: ModelStringInput
  and: [ModelSystemFilterInput]
  or: [ModelSystemFilterInput]
  not: ModelSystemFilterInput
}

type Query {
  getSystem(systemId: String!, systemName: String!): System
  listSystems(systemId: String, filter: ModelSystemFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelSystemConnection
  getPart(partId: String!): Part
  listParts(partId: String, filter: ModelPartFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelPartConnection
}

input ModelSystemConditionInput {
  details: ModelStringInput
  and: [ModelSystemConditionInput]
  or: [ModelSystemConditionInput]
  not: ModelSystemConditionInput
}

input CreateSystemInput {
  systemId: String!
  systemName: String!
  details: String
}

input UpdateSystemInput {
  systemId: String!
  systemName: String!
  details: String
}

input DeleteSystemInput {
  systemId: String!
  systemName: String!
}

type Mutation {
  createSystem(input: CreateSystemInput!, condition: ModelSystemConditionInput): System
  updateSystem(input: UpdateSystemInput!, condition: ModelSystemConditionInput): System
  deleteSystem(input: DeleteSystemInput!, condition: ModelSystemConditionInput): System
  createPart(input: CreatePartInput!, condition: ModelPartConditionInput): Part
  updatePart(input: UpdatePartInput!, condition: ModelPartConditionInput): Part
  deletePart(input: DeletePartInput!, condition: ModelPartConditionInput): Part
}

input ModelSubscriptionSystemFilterInput {
  systemId: ModelSubscriptionStringInput
  systemName: ModelSubscriptionStringInput
  details: ModelSubscriptionStringInput
  and: [ModelSubscriptionSystemFilterInput]
  or: [ModelSubscriptionSystemFilterInput]
}

type Subscription {
  onCreateSystem(filter: ModelSubscriptionSystemFilterInput): System @aws_subscribe(mutations: [\\"createSystem\\"])
  onUpdateSystem(filter: ModelSubscriptionSystemFilterInput): System @aws_subscribe(mutations: [\\"updateSystem\\"])
  onDeleteSystem(filter: ModelSubscriptionSystemFilterInput): System @aws_subscribe(mutations: [\\"deleteSystem\\"])
  onCreatePart(filter: ModelSubscriptionPartFilterInput): Part @aws_subscribe(mutations: [\\"createPart\\"])
  onUpdatePart(filter: ModelSubscriptionPartFilterInput): Part @aws_subscribe(mutations: [\\"updatePart\\"])
  onDeletePart(filter: ModelSubscriptionPartFilterInput): Part @aws_subscribe(mutations: [\\"deletePart\\"])
}

type ModelPartConnection {
  items: [Part]!
  nextToken: String
}

input ModelPartFilterInput {
  partId: ModelStringInput
  partName: ModelStringInput
  systemId: ModelStringInput
  systemName: ModelStringInput
  and: [ModelPartFilterInput]
  or: [ModelPartFilterInput]
  not: ModelPartFilterInput
}

input ModelPartConditionInput {
  partName: ModelStringInput
  systemId: ModelStringInput
  systemName: ModelStringInput
  and: [ModelPartConditionInput]
  or: [ModelPartConditionInput]
  not: ModelPartConditionInput
}

input CreatePartInput {
  partId: String!
  partName: String
  systemId: String!
  systemName: String!
}

input UpdatePartInput {
  partId: String!
  partName: String
  systemId: String
  systemName: String
}

input DeletePartInput {
  partId: String!
}

input ModelSubscriptionPartFilterInput {
  partId: ModelSubscriptionStringInput
  partName: ModelSubscriptionStringInput
  systemId: ModelSubscriptionStringInput
  systemName: ModelSubscriptionStringInput
  and: [ModelSubscriptionPartFilterInput]
  or: [ModelSubscriptionPartFilterInput]
}

input ModelStringKeyConditionInput {
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  between: [String]
  beginsWith: String
}
"
`;

exports[`@hasMany directive with RDS datasource composite key should generate correct resolvers 2`] = `
"## [Start] Invoke RDS Lambda data source. **
#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $lambdaInput = {} )
#set( $lambdaInput.args = {} )
#set( $lambdaInput.table = \\"Part\\" )
#set( $lambdaInput.operation = \\"LIST\\" )
#set( $lambdaInput.operationName = \\"ConnectionQuery\\" )
#set( $lambdaInput.args.metadata = {} )
#set( $lambdaInput.args.metadata.keys = [] )
#set( $lambdaInput.args.metadata.fieldMap = {} )
$util.qr($lambdaInput.args.metadata.fieldMap.putAll($util.defaultIfNull($context.stash.fieldMap, {})))
$util.qr($lambdaInput.args.putAll($util.defaultIfNull($context.arguments, {})))
#if( !$lambdaInput.args.filter )
  #set( $lambdaInput.args.filter = {} )
#end
$util.qr($lambdaInput.args.filter.put(\\"systemId\\", {
  \\"eq\\": $util.defaultIfNull($ctx.source.systemId, \\"\\")
}))
$util.qr($lambdaInput.args.filter.put(\\"systemName\\", {
  \\"eq\\": $util.defaultIfNull($ctx.source.systemName, \\"\\")
}))
$util.qr($lambdaInput.args.metadata.keys.addAll($util.defaultIfNull($ctx.stash.keys, [])))
{
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Invoke\\",
  \\"payload\\":   $util.toJson($lambdaInput)
}
## [End] Invoke RDS Lambda data source. **"
`;

exports[`@hasMany directive with RDS datasource composite key should generate correct resolvers 3`] = `
"## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **"
`;

exports[`@hasMany directive with RDS datasource happy case should generate correct resolvers 1`] = `
"type Blog {
  id: String!
  content: String
  posts(filter: ModelPostFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelPostConnection
}

type Post {
  id: String!
  content: String
  blogId: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelBlogConnection {
  items: [Blog]!
  nextToken: String
}

input ModelBlogFilterInput {
  id: ModelStringInput
  content: ModelStringInput
  and: [ModelBlogFilterInput]
  or: [ModelBlogFilterInput]
  not: ModelBlogFilterInput
}

type Query {
  getBlog(id: String!): Blog
  listBlogs(id: String, filter: ModelBlogFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelBlogConnection
  getPost(id: String!): Post
  listPosts(id: String, filter: ModelPostFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelPostConnection
}

input ModelBlogConditionInput {
  content: ModelStringInput
  and: [ModelBlogConditionInput]
  or: [ModelBlogConditionInput]
  not: ModelBlogConditionInput
}

input CreateBlogInput {
  id: String
  content: String
}

input UpdateBlogInput {
  id: String!
  content: String
}

input DeleteBlogInput {
  id: String!
}

type Mutation {
  createBlog(input: CreateBlogInput!, condition: ModelBlogConditionInput): Blog
  updateBlog(input: UpdateBlogInput!, condition: ModelBlogConditionInput): Blog
  deleteBlog(input: DeleteBlogInput!, condition: ModelBlogConditionInput): Blog
  createPost(input: CreatePostInput!, condition: ModelPostConditionInput): Post
  updatePost(input: UpdatePostInput!, condition: ModelPostConditionInput): Post
  deletePost(input: DeletePostInput!, condition: ModelPostConditionInput): Post
}

input ModelSubscriptionBlogFilterInput {
  id: ModelSubscriptionStringInput
  content: ModelSubscriptionStringInput
  and: [ModelSubscriptionBlogFilterInput]
  or: [ModelSubscriptionBlogFilterInput]
}

type Subscription {
  onCreateBlog(filter: ModelSubscriptionBlogFilterInput): Blog @aws_subscribe(mutations: [\\"createBlog\\"])
  onUpdateBlog(filter: ModelSubscriptionBlogFilterInput): Blog @aws_subscribe(mutations: [\\"updateBlog\\"])
  onDeleteBlog(filter: ModelSubscriptionBlogFilterInput): Blog @aws_subscribe(mutations: [\\"deleteBlog\\"])
  onCreatePost(filter: ModelSubscriptionPostFilterInput): Post @aws_subscribe(mutations: [\\"createPost\\"])
  onUpdatePost(filter: ModelSubscriptionPostFilterInput): Post @aws_subscribe(mutations: [\\"updatePost\\"])
  onDeletePost(filter: ModelSubscriptionPostFilterInput): Post @aws_subscribe(mutations: [\\"deletePost\\"])
}

type ModelPostConnection {
  items: [Post]!
  nextToken: String
}

input ModelPostFilterInput {
  id: ModelStringInput
  content: ModelStringInput
  blogId: ModelStringInput
  and: [ModelPostFilterInput]
  or: [ModelPostFilterInput]
  not: ModelPostFilterInput
}

input ModelPostConditionInput {
  content: ModelStringInput
  blogId: ModelStringInput
  and: [ModelPostConditionInput]
  or: [ModelPostConditionInput]
  not: ModelPostConditionInput
}

input CreatePostInput {
  id: String
  content: String
  blogId: String
}

input UpdatePostInput {
  id: String!
  content: String
  blogId: String
}

input DeletePostInput {
  id: String!
}

input ModelSubscriptionPostFilterInput {
  id: ModelSubscriptionStringInput
  content: ModelSubscriptionStringInput
  blogId: ModelSubscriptionStringInput
  and: [ModelSubscriptionPostFilterInput]
  or: [ModelSubscriptionPostFilterInput]
}
"
`;

exports[`@hasMany directive with RDS datasource happy case should generate correct resolvers 2`] = `
"## [Start] Invoke RDS Lambda data source. **
#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $lambdaInput = {} )
#set( $lambdaInput.args = {} )
#set( $lambdaInput.table = \\"Post\\" )
#set( $lambdaInput.operation = \\"LIST\\" )
#set( $lambdaInput.operationName = \\"ConnectionQuery\\" )
#set( $lambdaInput.args.metadata = {} )
#set( $lambdaInput.args.metadata.keys = [] )
#set( $lambdaInput.args.metadata.fieldMap = {} )
$util.qr($lambdaInput.args.metadata.fieldMap.putAll($util.defaultIfNull($context.stash.fieldMap, {})))
$util.qr($lambdaInput.args.putAll($util.defaultIfNull($context.arguments, {})))
#if( !$lambdaInput.args.filter )
  #set( $lambdaInput.args.filter = {} )
#end
$util.qr($lambdaInput.args.filter.put(\\"blogId\\", {
  \\"eq\\": $util.defaultIfNull($ctx.source.id, \\"\\")
}))
$util.qr($lambdaInput.args.metadata.keys.addAll($util.defaultIfNull($ctx.stash.keys, [])))
{
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Invoke\\",
  \\"payload\\":   $util.toJson($lambdaInput)
}
## [End] Invoke RDS Lambda data source. **"
`;

exports[`@hasMany directive with RDS datasource happy case should generate correct resolvers 3`] = `
"## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **"
`;

exports[`many to many query 1`] = `
Object {
  "definitions": Array [
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 21,
            "start": 14,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 16,
              "start": 14,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 21,
              "start": 18,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 20,
                "start": 18,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 20,
                  "start": 18,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 38,
            "start": 24,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 29,
              "start": 24,
            },
            "value": "title",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 38,
              "start": 31,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 37,
                "start": 31,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 37,
                  "start": 31,
                },
                "value": "String",
              },
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 83,
                "start": 49,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 55,
                  "start": 49,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 83,
                  "start": 57,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 83,
                    "start": 57,
                  },
                  "value": "ModelPostEditorFilterInput",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 118,
                "start": 85,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 98,
                  "start": 85,
                },
                "value": "sortDirection",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 118,
                  "start": 100,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 118,
                    "start": 100,
                  },
                  "value": "ModelSortDirection",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 130,
                "start": 120,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 125,
                  "start": 120,
                },
                "value": "limit",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 130,
                  "start": 127,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 130,
                    "start": 127,
                  },
                  "value": "Int",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 149,
                "start": 132,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 141,
                  "start": 132,
                },
                "value": "nextToken",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 149,
                  "start": 143,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 149,
                    "start": 143,
                  },
                  "value": "String",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 177,
            "start": 41,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 48,
              "start": 41,
            },
            "value": "editors",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 177,
              "start": 152,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 177,
                "start": 152,
              },
              "value": "ModelPostEditorConnection",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 203,
            "start": 180,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 189,
              "start": 180,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 203,
              "start": 191,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 202,
                "start": 191,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 202,
                  "start": 191,
                },
                "value": "AWSDateTime",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 229,
            "start": 206,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 215,
              "start": 206,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 229,
              "start": 217,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 228,
                "start": 217,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 228,
                  "start": 217,
                },
                "value": "AWSDateTime",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 246,
            "start": 232,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 240,
              "start": 232,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 246,
              "start": 242,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 245,
                "start": 242,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 245,
                  "start": 242,
                },
                "value": "Int",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 266,
            "start": 249,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 257,
              "start": 249,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 266,
              "start": 259,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 266,
                "start": 259,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 298,
            "start": 269,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 283,
              "start": 269,
            },
            "value": "_lastChangedAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 298,
              "start": 285,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 297,
                "start": 285,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 297,
                  "start": 285,
                },
                "value": "AWSTimestamp",
              },
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 300,
        "start": 0,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 9,
          "start": 5,
        },
        "value": "Post",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 329,
            "start": 322,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 324,
              "start": 322,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 329,
              "start": 326,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 328,
                "start": 326,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 328,
                  "start": 326,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 343,
            "start": 332,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 338,
              "start": 332,
            },
            "value": "postID",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 343,
              "start": 340,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 342,
                "start": 340,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 342,
                  "start": 340,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 359,
            "start": 346,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 354,
              "start": 346,
            },
            "value": "editorID",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 359,
              "start": 356,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 358,
                "start": 356,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 358,
                  "start": 356,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 373,
            "start": 362,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 366,
              "start": 362,
            },
            "value": "post",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 373,
              "start": 368,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 372,
                "start": 368,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 372,
                  "start": 368,
                },
                "value": "Post",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 389,
            "start": 376,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 382,
              "start": 376,
            },
            "value": "editor",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 389,
              "start": 384,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 388,
                "start": 384,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 388,
                  "start": 384,
                },
                "value": "User",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 415,
            "start": 392,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 401,
              "start": 392,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 415,
              "start": 403,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 414,
                "start": 403,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 414,
                  "start": 403,
                },
                "value": "AWSDateTime",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 441,
            "start": 418,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 427,
              "start": 418,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 441,
              "start": 429,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 440,
                "start": 429,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 440,
                  "start": 429,
                },
                "value": "AWSDateTime",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 458,
            "start": 444,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 452,
              "start": 444,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 458,
              "start": 454,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 457,
                "start": 454,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 457,
                  "start": 454,
                },
                "value": "Int",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 478,
            "start": 461,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 469,
              "start": 461,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 478,
              "start": 471,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 478,
                "start": 471,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 510,
            "start": 481,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 495,
              "start": 481,
            },
            "value": "_lastChangedAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 510,
              "start": 497,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 509,
                "start": 497,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 509,
                  "start": 497,
                },
                "value": "AWSTimestamp",
              },
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 512,
        "start": 302,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 317,
          "start": 307,
        },
        "value": "PostEditor",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 535,
            "start": 528,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 530,
              "start": 528,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 535,
              "start": 532,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 534,
                "start": 532,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 534,
                  "start": 532,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 555,
            "start": 538,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 546,
              "start": 538,
            },
            "value": "username",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 555,
              "start": 548,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 554,
                "start": 548,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 554,
                  "start": 548,
                },
                "value": "String",
              },
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 598,
                "start": 564,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 570,
                  "start": 564,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 598,
                  "start": 572,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 598,
                    "start": 572,
                  },
                  "value": "ModelPostEditorFilterInput",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 633,
                "start": 600,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 613,
                  "start": 600,
                },
                "value": "sortDirection",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 633,
                  "start": 615,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 633,
                    "start": 615,
                  },
                  "value": "ModelSortDirection",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 645,
                "start": 635,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 640,
                  "start": 635,
                },
                "value": "limit",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 645,
                  "start": 642,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 645,
                    "start": 642,
                  },
                  "value": "Int",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 664,
                "start": 647,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 656,
                  "start": 647,
                },
                "value": "nextToken",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 664,
                  "start": 658,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 664,
                    "start": 658,
                  },
                  "value": "String",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 692,
            "start": 558,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 563,
              "start": 558,
            },
            "value": "posts",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 692,
              "start": 667,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 692,
                "start": 667,
              },
              "value": "ModelPostEditorConnection",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 718,
            "start": 695,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 704,
              "start": 695,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 718,
              "start": 706,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 717,
                "start": 706,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 717,
                  "start": 706,
                },
                "value": "AWSDateTime",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 744,
            "start": 721,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 730,
              "start": 721,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 744,
              "start": 732,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 743,
                "start": 732,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 743,
                  "start": 732,
                },
                "value": "AWSDateTime",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 761,
            "start": 747,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 755,
              "start": 747,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 761,
              "start": 757,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 760,
                "start": 757,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 760,
                  "start": 757,
                },
                "value": "Int",
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 781,
            "start": 764,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 772,
              "start": 764,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 781,
              "start": 774,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 781,
                "start": 774,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 813,
            "start": 784,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 798,
              "start": 784,
            },
            "value": "_lastChangedAt",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 813,
              "start": 800,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 812,
                "start": 800,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 812,
                  "start": 800,
                },
                "value": "AWSTimestamp",
              },
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 815,
        "start": 514,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 523,
          "start": 519,
        },
        "value": "User",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 854,
            "start": 844,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 846,
              "start": 844,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 854,
              "start": 848,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 854,
                "start": 848,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 867,
            "start": 857,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 859,
              "start": 857,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 867,
              "start": 861,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 867,
                "start": 861,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 880,
            "start": 870,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 872,
              "start": 870,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 880,
              "start": 874,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 880,
                "start": 874,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 893,
            "start": 883,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 885,
              "start": 883,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 893,
              "start": 887,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 893,
                "start": 887,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 906,
            "start": 896,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 898,
              "start": 896,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 906,
              "start": 900,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 906,
                "start": 900,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 919,
            "start": 909,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 911,
              "start": 909,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 919,
              "start": 913,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 919,
                "start": 913,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 938,
            "start": 922,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 930,
              "start": 922,
            },
            "value": "contains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 938,
              "start": 932,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 938,
                "start": 932,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 960,
            "start": 941,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 952,
              "start": 941,
            },
            "value": "notContains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 960,
              "start": 954,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 960,
                "start": 954,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 980,
            "start": 963,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 970,
              "start": 963,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 980,
              "start": 972,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 979,
                "start": 973,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 979,
                  "start": 973,
                },
                "value": "String",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1001,
            "start": 983,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 993,
              "start": 983,
            },
            "value": "beginsWith",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1001,
              "start": 995,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1001,
                "start": 995,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1028,
            "start": 1004,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1019,
              "start": 1004,
            },
            "value": "attributeExists",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1028,
              "start": 1021,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1028,
                "start": 1021,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1065,
            "start": 1031,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1044,
              "start": 1031,
            },
            "value": "attributeType",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1065,
              "start": 1046,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1065,
                "start": 1046,
              },
              "value": "ModelAttributeTypes",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1088,
            "start": 1068,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1072,
              "start": 1068,
            },
            "value": "size",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1088,
              "start": 1074,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1088,
                "start": 1074,
              },
              "value": "ModelSizeInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 1090,
        "start": 817,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 839,
          "start": 823,
        },
        "value": "ModelStringInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1123,
            "start": 1116,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1118,
              "start": 1116,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1123,
              "start": 1120,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1123,
                "start": 1120,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1133,
            "start": 1126,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1128,
              "start": 1126,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1133,
              "start": 1130,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1133,
                "start": 1130,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1143,
            "start": 1136,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1138,
              "start": 1136,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1143,
              "start": 1140,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1143,
                "start": 1140,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1153,
            "start": 1146,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1148,
              "start": 1146,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1153,
              "start": 1150,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1153,
                "start": 1150,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1163,
            "start": 1156,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1158,
              "start": 1156,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1163,
              "start": 1160,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1163,
                "start": 1160,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1173,
            "start": 1166,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1168,
              "start": 1166,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1173,
              "start": 1170,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1173,
                "start": 1170,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1190,
            "start": 1176,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1183,
              "start": 1176,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 1190,
              "start": 1185,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 1189,
                "start": 1186,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 1189,
                  "start": 1186,
                },
                "value": "Int",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1217,
            "start": 1193,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1208,
              "start": 1193,
            },
            "value": "attributeExists",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1217,
              "start": 1210,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1217,
                "start": 1210,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1254,
            "start": 1220,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1233,
              "start": 1220,
            },
            "value": "attributeType",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1254,
              "start": 1235,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1254,
                "start": 1235,
              },
              "value": "ModelAttributeTypes",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 1256,
        "start": 1092,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 1111,
          "start": 1098,
        },
        "value": "ModelIntInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1293,
            "start": 1284,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1286,
              "start": 1284,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1293,
              "start": 1288,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1293,
                "start": 1288,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1305,
            "start": 1296,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1298,
              "start": 1296,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1305,
              "start": 1300,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1305,
                "start": 1300,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1317,
            "start": 1308,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1310,
              "start": 1308,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1317,
              "start": 1312,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1317,
                "start": 1312,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1329,
            "start": 1320,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1322,
              "start": 1320,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1329,
              "start": 1324,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1329,
                "start": 1324,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1341,
            "start": 1332,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1334,
              "start": 1332,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1341,
              "start": 1336,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1341,
                "start": 1336,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1353,
            "start": 1344,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1346,
              "start": 1344,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1353,
              "start": 1348,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1353,
                "start": 1348,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1372,
            "start": 1356,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1363,
              "start": 1356,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 1372,
              "start": 1365,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 1371,
                "start": 1366,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 1371,
                  "start": 1366,
                },
                "value": "Float",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1399,
            "start": 1375,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1390,
              "start": 1375,
            },
            "value": "attributeExists",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1399,
              "start": 1392,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1399,
                "start": 1392,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1436,
            "start": 1402,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1415,
              "start": 1402,
            },
            "value": "attributeType",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1436,
              "start": 1417,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1436,
                "start": 1417,
              },
              "value": "ModelAttributeTypes",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 1438,
        "start": 1258,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 1279,
          "start": 1264,
        },
        "value": "ModelFloatInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1479,
            "start": 1468,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1470,
              "start": 1468,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1479,
              "start": 1472,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1479,
                "start": 1472,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1493,
            "start": 1482,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1484,
              "start": 1482,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1493,
              "start": 1486,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1493,
                "start": 1486,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1520,
            "start": 1496,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1511,
              "start": 1496,
            },
            "value": "attributeExists",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1520,
              "start": 1513,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1520,
                "start": 1513,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1557,
            "start": 1523,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1536,
              "start": 1523,
            },
            "value": "attributeType",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1557,
              "start": 1538,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1557,
                "start": 1538,
              },
              "value": "ModelAttributeTypes",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 1559,
        "start": 1440,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 1463,
          "start": 1446,
        },
        "value": "ModelBooleanInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1590,
            "start": 1584,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1586,
              "start": 1584,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1590,
              "start": 1588,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1590,
                "start": 1588,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1599,
            "start": 1593,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1595,
              "start": 1593,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1599,
              "start": 1597,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1599,
                "start": 1597,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1608,
            "start": 1602,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1604,
              "start": 1602,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1608,
              "start": 1606,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1608,
                "start": 1606,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1617,
            "start": 1611,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1613,
              "start": 1611,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1617,
              "start": 1615,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1617,
                "start": 1615,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1626,
            "start": 1620,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1622,
              "start": 1620,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1626,
              "start": 1624,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1626,
                "start": 1624,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1635,
            "start": 1629,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1631,
              "start": 1629,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1635,
              "start": 1633,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1635,
                "start": 1633,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1650,
            "start": 1638,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1646,
              "start": 1638,
            },
            "value": "contains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1650,
              "start": 1648,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1650,
                "start": 1648,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1668,
            "start": 1653,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1664,
              "start": 1653,
            },
            "value": "notContains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1668,
              "start": 1666,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1668,
                "start": 1666,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1684,
            "start": 1671,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1678,
              "start": 1671,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 1684,
              "start": 1680,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 1683,
                "start": 1681,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 1683,
                  "start": 1681,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1701,
            "start": 1687,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1697,
              "start": 1687,
            },
            "value": "beginsWith",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1701,
              "start": 1699,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1701,
                "start": 1699,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1728,
            "start": 1704,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1719,
              "start": 1704,
            },
            "value": "attributeExists",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1728,
              "start": 1721,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1728,
                "start": 1721,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1765,
            "start": 1731,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1744,
              "start": 1731,
            },
            "value": "attributeType",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1765,
              "start": 1746,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1765,
                "start": 1746,
              },
              "value": "ModelAttributeTypes",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1788,
            "start": 1768,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1772,
              "start": 1768,
            },
            "value": "size",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1788,
              "start": 1774,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1788,
                "start": 1774,
              },
              "value": "ModelSizeInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 1790,
        "start": 1561,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 1579,
          "start": 1567,
        },
        "value": "ModelIDInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1841,
            "start": 1831,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1833,
              "start": 1831,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1841,
              "start": 1835,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1841,
                "start": 1835,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1854,
            "start": 1844,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1846,
              "start": 1844,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1854,
              "start": 1848,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1854,
                "start": 1848,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1867,
            "start": 1857,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1859,
              "start": 1857,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1867,
              "start": 1861,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1867,
                "start": 1861,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1880,
            "start": 1870,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1872,
              "start": 1870,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1880,
              "start": 1874,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1880,
                "start": 1874,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1893,
            "start": 1883,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1885,
              "start": 1883,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1893,
              "start": 1887,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1893,
                "start": 1887,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1906,
            "start": 1896,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1898,
              "start": 1896,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1906,
              "start": 1900,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1906,
                "start": 1900,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1925,
            "start": 1909,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1917,
              "start": 1909,
            },
            "value": "contains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1925,
              "start": 1919,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1925,
                "start": 1919,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1947,
            "start": 1928,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1939,
              "start": 1928,
            },
            "value": "notContains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1947,
              "start": 1941,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1947,
                "start": 1941,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1967,
            "start": 1950,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1957,
              "start": 1950,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 1967,
              "start": 1959,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 1966,
                "start": 1960,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 1966,
                  "start": 1960,
                },
                "value": "String",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 1988,
            "start": 1970,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1980,
              "start": 1970,
            },
            "value": "beginsWith",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 1988,
              "start": 1982,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 1988,
                "start": 1982,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2003,
            "start": 1991,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 1993,
              "start": 1991,
            },
            "value": "in",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2003,
              "start": 1995,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2002,
                "start": 1996,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2002,
                  "start": 1996,
                },
                "value": "String",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2021,
            "start": 2006,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2011,
              "start": 2006,
            },
            "value": "notIn",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2021,
              "start": 2013,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2020,
                "start": 2014,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2020,
                  "start": 2014,
                },
                "value": "String",
              },
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 2023,
        "start": 1792,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 1826,
          "start": 1798,
        },
        "value": "ModelSubscriptionStringInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2068,
            "start": 2061,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2063,
              "start": 2061,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2068,
              "start": 2065,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2068,
                "start": 2065,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2078,
            "start": 2071,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2073,
              "start": 2071,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2078,
              "start": 2075,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2078,
                "start": 2075,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2088,
            "start": 2081,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2083,
              "start": 2081,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2088,
              "start": 2085,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2088,
                "start": 2085,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2098,
            "start": 2091,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2093,
              "start": 2091,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2098,
              "start": 2095,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2098,
                "start": 2095,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2108,
            "start": 2101,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2103,
              "start": 2101,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2108,
              "start": 2105,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2108,
                "start": 2105,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2118,
            "start": 2111,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2113,
              "start": 2111,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2118,
              "start": 2115,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2118,
                "start": 2115,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2135,
            "start": 2121,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2128,
              "start": 2121,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2135,
              "start": 2130,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2134,
                "start": 2131,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2134,
                  "start": 2131,
                },
                "value": "Int",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2147,
            "start": 2138,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2140,
              "start": 2138,
            },
            "value": "in",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2147,
              "start": 2142,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2146,
                "start": 2143,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2146,
                  "start": 2143,
                },
                "value": "Int",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2162,
            "start": 2150,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2155,
              "start": 2150,
            },
            "value": "notIn",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2162,
              "start": 2157,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2161,
                "start": 2158,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2161,
                  "start": 2158,
                },
                "value": "Int",
              },
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 2164,
        "start": 2025,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2056,
          "start": 2031,
        },
        "value": "ModelSubscriptionIntInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2213,
            "start": 2204,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2206,
              "start": 2204,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2213,
              "start": 2208,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2213,
                "start": 2208,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2225,
            "start": 2216,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2218,
              "start": 2216,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2225,
              "start": 2220,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2225,
                "start": 2220,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2237,
            "start": 2228,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2230,
              "start": 2228,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2237,
              "start": 2232,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2237,
                "start": 2232,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2249,
            "start": 2240,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2242,
              "start": 2240,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2249,
              "start": 2244,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2249,
                "start": 2244,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2261,
            "start": 2252,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2254,
              "start": 2252,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2261,
              "start": 2256,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2261,
                "start": 2256,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2273,
            "start": 2264,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2266,
              "start": 2264,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2273,
              "start": 2268,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2273,
                "start": 2268,
              },
              "value": "Float",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2292,
            "start": 2276,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2283,
              "start": 2276,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2292,
              "start": 2285,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2291,
                "start": 2286,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2291,
                  "start": 2286,
                },
                "value": "Float",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2306,
            "start": 2295,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2297,
              "start": 2295,
            },
            "value": "in",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2306,
              "start": 2299,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2305,
                "start": 2300,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2305,
                  "start": 2300,
                },
                "value": "Float",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2323,
            "start": 2309,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2314,
              "start": 2309,
            },
            "value": "notIn",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2323,
              "start": 2316,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2322,
                "start": 2317,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2322,
                  "start": 2317,
                },
                "value": "Float",
              },
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 2325,
        "start": 2166,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2199,
          "start": 2172,
        },
        "value": "ModelSubscriptionFloatInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2378,
            "start": 2367,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2369,
              "start": 2367,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2378,
              "start": 2371,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2378,
                "start": 2371,
              },
              "value": "Boolean",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2392,
            "start": 2381,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2383,
              "start": 2381,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2392,
              "start": 2385,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2392,
                "start": 2385,
              },
              "value": "Boolean",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 2394,
        "start": 2327,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2362,
          "start": 2333,
        },
        "value": "ModelSubscriptionBooleanInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2437,
            "start": 2431,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2433,
              "start": 2431,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2437,
              "start": 2435,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2437,
                "start": 2435,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2446,
            "start": 2440,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2442,
              "start": 2440,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2446,
              "start": 2444,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2446,
                "start": 2444,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2455,
            "start": 2449,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2451,
              "start": 2449,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2455,
              "start": 2453,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2455,
                "start": 2453,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2464,
            "start": 2458,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2460,
              "start": 2458,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2464,
              "start": 2462,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2464,
                "start": 2462,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2473,
            "start": 2467,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2469,
              "start": 2467,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2473,
              "start": 2471,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2473,
                "start": 2471,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2482,
            "start": 2476,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2478,
              "start": 2476,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2482,
              "start": 2480,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2482,
                "start": 2480,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2497,
            "start": 2485,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2493,
              "start": 2485,
            },
            "value": "contains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2497,
              "start": 2495,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2497,
                "start": 2495,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2515,
            "start": 2500,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2511,
              "start": 2500,
            },
            "value": "notContains",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2515,
              "start": 2513,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2515,
                "start": 2513,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2531,
            "start": 2518,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2525,
              "start": 2518,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2531,
              "start": 2527,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2530,
                "start": 2528,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2530,
                  "start": 2528,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2548,
            "start": 2534,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2544,
              "start": 2534,
            },
            "value": "beginsWith",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2548,
              "start": 2546,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2548,
                "start": 2546,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2559,
            "start": 2551,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2553,
              "start": 2551,
            },
            "value": "in",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2559,
              "start": 2555,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2558,
                "start": 2556,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2558,
                  "start": 2556,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2573,
            "start": 2562,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2567,
              "start": 2562,
            },
            "value": "notIn",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2573,
              "start": 2569,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2572,
                "start": 2570,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2572,
                  "start": 2570,
                },
                "value": "ID",
              },
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 2575,
        "start": 2396,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2426,
          "start": 2402,
        },
        "value": "ModelSubscriptionIDInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "kind": "EnumTypeDefinition",
      "loc": Object {
        "end": 2696,
        "start": 2577,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2601,
          "start": 2582,
        },
        "value": "ModelAttributeTypes",
      },
      "values": Array [
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2612,
            "start": 2606,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2612,
              "start": 2606,
            },
            "value": "binary",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2624,
            "start": 2615,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2624,
              "start": 2615,
            },
            "value": "binarySet",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2631,
            "start": 2627,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2631,
              "start": 2627,
            },
            "value": "bool",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2638,
            "start": 2634,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2638,
              "start": 2634,
            },
            "value": "list",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2644,
            "start": 2641,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2644,
              "start": 2641,
            },
            "value": "map",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2653,
            "start": 2647,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2653,
              "start": 2647,
            },
            "value": "number",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2665,
            "start": 2656,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2665,
              "start": 2656,
            },
            "value": "numberSet",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2674,
            "start": 2668,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2674,
              "start": 2668,
            },
            "value": "string",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2686,
            "start": 2677,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2686,
              "start": 2677,
            },
            "value": "stringSet",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2694,
            "start": 2689,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2694,
              "start": 2689,
            },
            "value": "_null",
          },
        },
      ],
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2730,
            "start": 2723,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2725,
              "start": 2723,
            },
            "value": "ne",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2730,
              "start": 2727,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2730,
                "start": 2727,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2740,
            "start": 2733,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2735,
              "start": 2733,
            },
            "value": "eq",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2740,
              "start": 2737,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2740,
                "start": 2737,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2750,
            "start": 2743,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2745,
              "start": 2743,
            },
            "value": "le",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2750,
              "start": 2747,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2750,
                "start": 2747,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2760,
            "start": 2753,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2755,
              "start": 2753,
            },
            "value": "lt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2760,
              "start": 2757,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2760,
                "start": 2757,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2770,
            "start": 2763,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2765,
              "start": 2763,
            },
            "value": "ge",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2770,
              "start": 2767,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2770,
                "start": 2767,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2780,
            "start": 2773,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2775,
              "start": 2773,
            },
            "value": "gt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2780,
              "start": 2777,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2780,
                "start": 2777,
              },
              "value": "Int",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2797,
            "start": 2783,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2790,
              "start": 2783,
            },
            "value": "between",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 2797,
              "start": 2792,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 2796,
                "start": 2793,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 2796,
                  "start": 2793,
                },
                "value": "Int",
              },
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 2799,
        "start": 2698,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2718,
          "start": 2704,
        },
        "value": "ModelSizeInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "kind": "EnumTypeDefinition",
      "loc": Object {
        "end": 2841,
        "start": 2801,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2824,
          "start": 2806,
        },
        "value": "ModelSortDirection",
      },
      "values": Array [
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2832,
            "start": 2829,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2832,
              "start": 2829,
            },
            "value": "ASC",
          },
        },
        Object {
          "description": undefined,
          "directives": Array [],
          "kind": "EnumValueDefinition",
          "loc": Object {
            "end": 2839,
            "start": 2835,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2839,
              "start": 2835,
            },
            "value": "DESC",
          },
        },
      ],
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 2886,
            "start": 2872,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2877,
              "start": 2872,
            },
            "value": "items",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 2886,
              "start": 2879,
            },
            "type": Object {
              "kind": "ListType",
              "loc": Object {
                "end": 2885,
                "start": 2879,
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 2884,
                  "start": 2880,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 2884,
                    "start": 2880,
                  },
                  "value": "Post",
                },
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 2906,
            "start": 2889,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2898,
              "start": 2889,
            },
            "value": "nextToken",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2906,
              "start": 2900,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2906,
                "start": 2900,
              },
              "value": "String",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 2932,
            "start": 2909,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2918,
              "start": 2909,
            },
            "value": "startedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2932,
              "start": 2920,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2932,
                "start": 2920,
              },
              "value": "AWSTimestamp",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 2934,
        "start": 2843,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2867,
          "start": 2848,
        },
        "value": "ModelPostConnection",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 2983,
            "start": 2967,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2969,
              "start": 2967,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 2983,
              "start": 2971,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 2983,
                "start": 2971,
              },
              "value": "ModelIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3009,
            "start": 2986,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 2991,
              "start": 2986,
            },
            "value": "title",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3009,
              "start": 2993,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3009,
                "start": 2993,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3039,
            "start": 3012,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3021,
              "start": 3012,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3039,
              "start": 3023,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3039,
                "start": 3023,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3069,
            "start": 3042,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3051,
              "start": 3042,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3069,
              "start": 3053,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3069,
                "start": 3053,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3099,
            "start": 3072,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3075,
              "start": 3072,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 3099,
              "start": 3077,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 3098,
                "start": 3078,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3098,
                  "start": 3078,
                },
                "value": "ModelPostFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3128,
            "start": 3102,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3104,
              "start": 3102,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 3128,
              "start": 3106,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 3127,
                "start": 3107,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3127,
                  "start": 3107,
                },
                "value": "ModelPostFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3156,
            "start": 3131,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3134,
              "start": 3131,
            },
            "value": "not",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3156,
              "start": 3136,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3156,
                "start": 3136,
              },
              "value": "ModelPostFilterInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3186,
            "start": 3159,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3167,
              "start": 3159,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3186,
              "start": 3169,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3186,
                "start": 3169,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 3188,
        "start": 2936,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 2962,
          "start": 2942,
        },
        "value": "ModelPostFilterInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3220,
                "start": 3213,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3215,
                  "start": 3213,
                },
                "value": "id",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 3220,
                  "start": 3217,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 3219,
                    "start": 3217,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 3219,
                      "start": 3217,
                    },
                    "value": "ID",
                  },
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 3227,
            "start": 3205,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3212,
              "start": 3205,
            },
            "value": "getPost",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3227,
              "start": 3223,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3227,
                "start": 3223,
              },
              "value": "Post",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3268,
                "start": 3240,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3246,
                  "start": 3240,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3268,
                  "start": 3248,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3268,
                    "start": 3248,
                  },
                  "value": "ModelPostFilterInput",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3280,
                "start": 3270,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3275,
                  "start": 3270,
                },
                "value": "limit",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3280,
                  "start": 3277,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3280,
                    "start": 3277,
                  },
                  "value": "Int",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3299,
                "start": 3282,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3291,
                  "start": 3282,
                },
                "value": "nextToken",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3299,
                  "start": 3293,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3299,
                    "start": 3293,
                  },
                  "value": "String",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 3321,
            "start": 3230,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3239,
              "start": 3230,
            },
            "value": "listPosts",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3321,
              "start": 3302,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3321,
                "start": 3302,
              },
              "value": "ModelPostConnection",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3362,
                "start": 3334,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3340,
                  "start": 3334,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3362,
                  "start": 3342,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3362,
                    "start": 3342,
                  },
                  "value": "ModelPostFilterInput",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3374,
                "start": 3364,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3369,
                  "start": 3364,
                },
                "value": "limit",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3374,
                  "start": 3371,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3374,
                    "start": 3371,
                  },
                  "value": "Int",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3393,
                "start": 3376,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3385,
                  "start": 3376,
                },
                "value": "nextToken",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3393,
                  "start": 3387,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3393,
                    "start": 3387,
                  },
                  "value": "String",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3417,
                "start": 3395,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3403,
                  "start": 3395,
                },
                "value": "lastSync",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3417,
                  "start": 3405,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3417,
                    "start": 3405,
                  },
                  "value": "AWSTimestamp",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 3439,
            "start": 3324,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3333,
              "start": 3324,
            },
            "value": "syncPosts",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3439,
              "start": 3420,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3439,
                "start": 3420,
              },
              "value": "ModelPostConnection",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3457,
                "start": 3450,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3452,
                  "start": 3450,
                },
                "value": "id",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 3457,
                  "start": 3454,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 3456,
                    "start": 3454,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 3456,
                      "start": 3454,
                    },
                    "value": "ID",
                  },
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 3464,
            "start": 3442,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3449,
              "start": 3442,
            },
            "value": "getUser",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3464,
              "start": 3460,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3464,
                "start": 3460,
              },
              "value": "User",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3505,
                "start": 3477,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3483,
                  "start": 3477,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3505,
                  "start": 3485,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3505,
                    "start": 3485,
                  },
                  "value": "ModelUserFilterInput",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3517,
                "start": 3507,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3512,
                  "start": 3507,
                },
                "value": "limit",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3517,
                  "start": 3514,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3517,
                    "start": 3514,
                  },
                  "value": "Int",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3536,
                "start": 3519,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3528,
                  "start": 3519,
                },
                "value": "nextToken",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3536,
                  "start": 3530,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3536,
                    "start": 3530,
                  },
                  "value": "String",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 3558,
            "start": 3467,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3476,
              "start": 3467,
            },
            "value": "listUsers",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3558,
              "start": 3539,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3558,
                "start": 3539,
              },
              "value": "ModelUserConnection",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3599,
                "start": 3571,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3577,
                  "start": 3571,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3599,
                  "start": 3579,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3599,
                    "start": 3579,
                  },
                  "value": "ModelUserFilterInput",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3611,
                "start": 3601,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3606,
                  "start": 3601,
                },
                "value": "limit",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3611,
                  "start": 3608,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3611,
                    "start": 3608,
                  },
                  "value": "Int",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3630,
                "start": 3613,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3622,
                  "start": 3613,
                },
                "value": "nextToken",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3630,
                  "start": 3624,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3630,
                    "start": 3624,
                  },
                  "value": "String",
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 3654,
                "start": 3632,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3640,
                  "start": 3632,
                },
                "value": "lastSync",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 3654,
                  "start": 3642,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 3654,
                    "start": 3642,
                  },
                  "value": "AWSTimestamp",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 3676,
            "start": 3561,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3570,
              "start": 3561,
            },
            "value": "syncUsers",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3676,
              "start": 3657,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3676,
                "start": 3657,
              },
              "value": "ModelUserConnection",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 3678,
        "start": 3190,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 3200,
          "start": 3195,
        },
        "value": "Query",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3737,
            "start": 3714,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3719,
              "start": 3714,
            },
            "value": "title",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3737,
              "start": 3721,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3737,
                "start": 3721,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3770,
            "start": 3740,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3743,
              "start": 3740,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 3770,
              "start": 3745,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 3769,
                "start": 3746,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3769,
                  "start": 3746,
                },
                "value": "ModelPostConditionInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3802,
            "start": 3773,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3775,
              "start": 3773,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 3802,
              "start": 3777,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 3801,
                "start": 3778,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3801,
                  "start": 3778,
                },
                "value": "ModelPostConditionInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3833,
            "start": 3805,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3808,
              "start": 3805,
            },
            "value": "not",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3833,
              "start": 3810,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3833,
                "start": 3810,
              },
              "value": "ModelPostConditionInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3863,
            "start": 3836,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3844,
              "start": 3836,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3863,
              "start": 3846,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3863,
                "start": 3846,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3893,
            "start": 3866,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3875,
              "start": 3866,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3893,
              "start": 3877,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3893,
                "start": 3877,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3923,
            "start": 3896,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3905,
              "start": 3896,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3923,
              "start": 3907,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3923,
                "start": 3907,
              },
              "value": "ModelStringInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 3925,
        "start": 3680,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 3709,
          "start": 3686,
        },
        "value": "ModelPostConditionInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3959,
            "start": 3953,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3955,
              "start": 3953,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3959,
              "start": 3957,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3959,
                "start": 3957,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3976,
            "start": 3962,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3967,
              "start": 3962,
            },
            "value": "title",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 3976,
              "start": 3969,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 3975,
                "start": 3969,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 3975,
                  "start": 3969,
                },
                "value": "String",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 3992,
            "start": 3979,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 3987,
              "start": 3979,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 3992,
              "start": 3989,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 3992,
                "start": 3989,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 3994,
        "start": 3927,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 3948,
          "start": 3933,
        },
        "value": "CreatePostInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 4029,
            "start": 4022,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4024,
              "start": 4022,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 4029,
              "start": 4026,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 4028,
                "start": 4026,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4028,
                  "start": 4026,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 4045,
            "start": 4032,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4037,
              "start": 4032,
            },
            "value": "title",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4045,
              "start": 4039,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4045,
                "start": 4039,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 4061,
            "start": 4048,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4056,
              "start": 4048,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4061,
              "start": 4058,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4061,
                "start": 4058,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 4063,
        "start": 3996,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 4017,
          "start": 4002,
        },
        "value": "UpdatePostInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 4098,
            "start": 4091,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4093,
              "start": 4091,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 4098,
              "start": 4095,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 4097,
                "start": 4095,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4097,
                  "start": 4095,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 4114,
            "start": 4101,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4109,
              "start": 4101,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4114,
              "start": 4111,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4114,
                "start": 4111,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 4116,
        "start": 4065,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 4086,
          "start": 4071,
        },
        "value": "DeletePostInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4170,
                "start": 4147,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4152,
                  "start": 4147,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4170,
                  "start": 4154,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4169,
                    "start": 4154,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4169,
                      "start": 4154,
                    },
                    "value": "CreatePostInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4206,
                "start": 4172,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4181,
                  "start": 4172,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4206,
                  "start": 4183,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4206,
                    "start": 4183,
                  },
                  "value": "ModelPostConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4213,
            "start": 4136,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4146,
              "start": 4136,
            },
            "value": "createPost",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4213,
              "start": 4209,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4213,
                "start": 4209,
              },
              "value": "Post",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4250,
                "start": 4227,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4232,
                  "start": 4227,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4250,
                  "start": 4234,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4249,
                    "start": 4234,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4249,
                      "start": 4234,
                    },
                    "value": "UpdatePostInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4286,
                "start": 4252,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4261,
                  "start": 4252,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4286,
                  "start": 4263,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4286,
                    "start": 4263,
                  },
                  "value": "ModelPostConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4293,
            "start": 4216,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4226,
              "start": 4216,
            },
            "value": "updatePost",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4293,
              "start": 4289,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4293,
                "start": 4289,
              },
              "value": "Post",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4330,
                "start": 4307,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4312,
                  "start": 4307,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4330,
                  "start": 4314,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4329,
                    "start": 4314,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4329,
                      "start": 4314,
                    },
                    "value": "DeletePostInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4366,
                "start": 4332,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4341,
                  "start": 4332,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4366,
                  "start": 4343,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4366,
                    "start": 4343,
                  },
                  "value": "ModelPostConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4373,
            "start": 4296,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4306,
              "start": 4296,
            },
            "value": "deletePost",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4373,
              "start": 4369,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4373,
                "start": 4369,
              },
              "value": "Post",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4422,
                "start": 4393,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4398,
                  "start": 4393,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4422,
                  "start": 4400,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4421,
                    "start": 4400,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4421,
                      "start": 4400,
                    },
                    "value": "CreatePostEditorInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4464,
                "start": 4424,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4433,
                  "start": 4424,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4464,
                  "start": 4435,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4464,
                    "start": 4435,
                  },
                  "value": "ModelPostEditorConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4477,
            "start": 4376,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4392,
              "start": 4376,
            },
            "value": "createPostEditor",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4477,
              "start": 4467,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4477,
                "start": 4467,
              },
              "value": "PostEditor",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4526,
                "start": 4497,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4502,
                  "start": 4497,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4526,
                  "start": 4504,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4525,
                    "start": 4504,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4525,
                      "start": 4504,
                    },
                    "value": "UpdatePostEditorInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4568,
                "start": 4528,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4537,
                  "start": 4528,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4568,
                  "start": 4539,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4568,
                    "start": 4539,
                  },
                  "value": "ModelPostEditorConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4581,
            "start": 4480,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4496,
              "start": 4480,
            },
            "value": "updatePostEditor",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4581,
              "start": 4571,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4581,
                "start": 4571,
              },
              "value": "PostEditor",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4630,
                "start": 4601,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4606,
                  "start": 4601,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4630,
                  "start": 4608,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4629,
                    "start": 4608,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4629,
                      "start": 4608,
                    },
                    "value": "DeletePostEditorInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4672,
                "start": 4632,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4641,
                  "start": 4632,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4672,
                  "start": 4643,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4672,
                    "start": 4643,
                  },
                  "value": "ModelPostEditorConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4685,
            "start": 4584,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4600,
              "start": 4584,
            },
            "value": "deletePostEditor",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4685,
              "start": 4675,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4685,
                "start": 4675,
              },
              "value": "PostEditor",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4722,
                "start": 4699,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4704,
                  "start": 4699,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4722,
                  "start": 4706,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4721,
                    "start": 4706,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4721,
                      "start": 4706,
                    },
                    "value": "CreateUserInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4758,
                "start": 4724,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4733,
                  "start": 4724,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4758,
                  "start": 4735,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4758,
                    "start": 4735,
                  },
                  "value": "ModelUserConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4765,
            "start": 4688,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4698,
              "start": 4688,
            },
            "value": "createUser",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4765,
              "start": 4761,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4765,
                "start": 4761,
              },
              "value": "User",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4802,
                "start": 4779,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4784,
                  "start": 4779,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4802,
                  "start": 4786,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4801,
                    "start": 4786,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4801,
                      "start": 4786,
                    },
                    "value": "UpdateUserInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4838,
                "start": 4804,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4813,
                  "start": 4804,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4838,
                  "start": 4815,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4838,
                    "start": 4815,
                  },
                  "value": "ModelUserConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4845,
            "start": 4768,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4778,
              "start": 4768,
            },
            "value": "updateUser",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4845,
              "start": 4841,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4845,
                "start": 4841,
              },
              "value": "User",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4882,
                "start": 4859,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4864,
                  "start": 4859,
                },
                "value": "input",
              },
              "type": Object {
                "kind": "NonNullType",
                "loc": Object {
                  "end": 4882,
                  "start": 4866,
                },
                "type": Object {
                  "kind": "NamedType",
                  "loc": Object {
                    "end": 4881,
                    "start": 4866,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 4881,
                      "start": 4866,
                    },
                    "value": "DeleteUserInput",
                  },
                },
              },
            },
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 4918,
                "start": 4884,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 4893,
                  "start": 4884,
                },
                "value": "condition",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 4918,
                  "start": 4895,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 4918,
                    "start": 4895,
                  },
                  "value": "ModelUserConditionInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 4925,
            "start": 4848,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4858,
              "start": 4848,
            },
            "value": "deleteUser",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 4925,
              "start": 4921,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 4925,
                "start": 4921,
              },
              "value": "User",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 4927,
        "start": 4118,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 4131,
          "start": 4123,
        },
        "value": "Mutation",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 5000,
            "start": 4972,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 4974,
              "start": 4972,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5000,
              "start": 4976,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5000,
                "start": 4976,
              },
              "value": "ModelSubscriptionIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 5038,
            "start": 5003,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5008,
              "start": 5003,
            },
            "value": "title",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5038,
              "start": 5010,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5038,
                "start": 5010,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 5080,
            "start": 5041,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5050,
              "start": 5041,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5080,
              "start": 5052,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5080,
                "start": 5052,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 5122,
            "start": 5083,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5092,
              "start": 5083,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5122,
              "start": 5094,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5122,
                "start": 5094,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 5164,
            "start": 5125,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5128,
              "start": 5125,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 5164,
              "start": 5130,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 5163,
                "start": 5131,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5163,
                  "start": 5131,
                },
                "value": "ModelSubscriptionPostFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 5205,
            "start": 5167,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5169,
              "start": 5167,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 5205,
              "start": 5171,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 5204,
                "start": 5172,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5204,
                  "start": 5172,
                },
                "value": "ModelSubscriptionPostFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 5235,
            "start": 5208,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5216,
              "start": 5208,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5235,
              "start": 5218,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5235,
                "start": 5218,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 5237,
        "start": 4929,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 4967,
          "start": 4935,
        },
        "value": "ModelSubscriptionPostFilterInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 5314,
                "start": 5274,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5280,
                  "start": 5274,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 5314,
                  "start": 5282,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 5314,
                    "start": 5282,
                  },
                  "value": "ModelSubscriptionPostFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 5362,
                    "start": 5337,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 5346,
                      "start": 5337,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 5362,
                      "start": 5348,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 5361,
                          "start": 5349,
                        },
                        "value": "createPost",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 5363,
                "start": 5322,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5336,
                  "start": 5323,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 5363,
            "start": 5261,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5273,
              "start": 5261,
            },
            "value": "onCreatePost",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5321,
              "start": 5317,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5321,
                "start": 5317,
              },
              "value": "Post",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 5419,
                "start": 5379,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5385,
                  "start": 5379,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 5419,
                  "start": 5387,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 5419,
                    "start": 5387,
                  },
                  "value": "ModelSubscriptionPostFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 5467,
                    "start": 5442,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 5451,
                      "start": 5442,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 5467,
                      "start": 5453,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 5466,
                          "start": 5454,
                        },
                        "value": "updatePost",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 5468,
                "start": 5427,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5441,
                  "start": 5428,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 5468,
            "start": 5366,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5378,
              "start": 5366,
            },
            "value": "onUpdatePost",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5426,
              "start": 5422,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5426,
                "start": 5422,
              },
              "value": "Post",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 5524,
                "start": 5484,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5490,
                  "start": 5484,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 5524,
                  "start": 5492,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 5524,
                    "start": 5492,
                  },
                  "value": "ModelSubscriptionPostFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 5572,
                    "start": 5547,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 5556,
                      "start": 5547,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 5572,
                      "start": 5558,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 5571,
                          "start": 5559,
                        },
                        "value": "deletePost",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 5573,
                "start": 5532,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5546,
                  "start": 5533,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 5573,
            "start": 5471,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5483,
              "start": 5471,
            },
            "value": "onDeletePost",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5531,
              "start": 5527,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5531,
                "start": 5527,
              },
              "value": "Post",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 5641,
                "start": 5595,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5601,
                  "start": 5595,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 5641,
                  "start": 5603,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 5641,
                    "start": 5603,
                  },
                  "value": "ModelSubscriptionPostEditorFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 5701,
                    "start": 5670,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 5679,
                      "start": 5670,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 5701,
                      "start": 5681,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 5700,
                          "start": 5682,
                        },
                        "value": "createPostEditor",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 5702,
                "start": 5655,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5669,
                  "start": 5656,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 5702,
            "start": 5576,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5594,
              "start": 5576,
            },
            "value": "onCreatePostEditor",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5654,
              "start": 5644,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5654,
                "start": 5644,
              },
              "value": "PostEditor",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 5770,
                "start": 5724,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5730,
                  "start": 5724,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 5770,
                  "start": 5732,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 5770,
                    "start": 5732,
                  },
                  "value": "ModelSubscriptionPostEditorFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 5830,
                    "start": 5799,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 5808,
                      "start": 5799,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 5830,
                      "start": 5810,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 5829,
                          "start": 5811,
                        },
                        "value": "updatePostEditor",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 5831,
                "start": 5784,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5798,
                  "start": 5785,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 5831,
            "start": 5705,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5723,
              "start": 5705,
            },
            "value": "onUpdatePostEditor",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5783,
              "start": 5773,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5783,
                "start": 5773,
              },
              "value": "PostEditor",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 5899,
                "start": 5853,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5859,
                  "start": 5853,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 5899,
                  "start": 5861,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 5899,
                    "start": 5861,
                  },
                  "value": "ModelSubscriptionPostEditorFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 5959,
                    "start": 5928,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 5937,
                      "start": 5928,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 5959,
                      "start": 5939,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 5958,
                          "start": 5940,
                        },
                        "value": "deletePostEditor",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 5960,
                "start": 5913,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5927,
                  "start": 5914,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 5960,
            "start": 5834,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5852,
              "start": 5834,
            },
            "value": "onDeletePostEditor",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 5912,
              "start": 5902,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 5912,
                "start": 5902,
              },
              "value": "PostEditor",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 6016,
                "start": 5976,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 5982,
                  "start": 5976,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 6016,
                  "start": 5984,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 6016,
                    "start": 5984,
                  },
                  "value": "ModelSubscriptionUserFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 6064,
                    "start": 6039,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 6048,
                      "start": 6039,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 6064,
                      "start": 6050,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 6063,
                          "start": 6051,
                        },
                        "value": "createUser",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 6065,
                "start": 6024,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6038,
                  "start": 6025,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 6065,
            "start": 5963,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 5975,
              "start": 5963,
            },
            "value": "onCreateUser",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6023,
              "start": 6019,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6023,
                "start": 6019,
              },
              "value": "User",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 6121,
                "start": 6081,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6087,
                  "start": 6081,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 6121,
                  "start": 6089,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 6121,
                    "start": 6089,
                  },
                  "value": "ModelSubscriptionUserFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 6169,
                    "start": 6144,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 6153,
                      "start": 6144,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 6169,
                      "start": 6155,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 6168,
                          "start": 6156,
                        },
                        "value": "updateUser",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 6170,
                "start": 6129,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6143,
                  "start": 6130,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 6170,
            "start": 6068,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6080,
              "start": 6068,
            },
            "value": "onUpdateUser",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6128,
              "start": 6124,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6128,
                "start": 6124,
              },
              "value": "User",
            },
          },
        },
        Object {
          "arguments": Array [
            Object {
              "defaultValue": undefined,
              "description": undefined,
              "directives": Array [],
              "kind": "InputValueDefinition",
              "loc": Object {
                "end": 6226,
                "start": 6186,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6192,
                  "start": 6186,
                },
                "value": "filter",
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 6226,
                  "start": 6194,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 6226,
                    "start": 6194,
                  },
                  "value": "ModelSubscriptionUserFilterInput",
                },
              },
            },
          ],
          "description": undefined,
          "directives": Array [
            Object {
              "arguments": Array [
                Object {
                  "kind": "Argument",
                  "loc": Object {
                    "end": 6274,
                    "start": 6249,
                  },
                  "name": Object {
                    "kind": "Name",
                    "loc": Object {
                      "end": 6258,
                      "start": 6249,
                    },
                    "value": "mutations",
                  },
                  "value": Object {
                    "kind": "ListValue",
                    "loc": Object {
                      "end": 6274,
                      "start": 6260,
                    },
                    "values": Array [
                      Object {
                        "block": false,
                        "kind": "StringValue",
                        "loc": Object {
                          "end": 6273,
                          "start": 6261,
                        },
                        "value": "deleteUser",
                      },
                    ],
                  },
                },
              ],
              "kind": "Directive",
              "loc": Object {
                "end": 6275,
                "start": 6234,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6248,
                  "start": 6235,
                },
                "value": "aws_subscribe",
              },
            },
          ],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 6275,
            "start": 6173,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6185,
              "start": 6173,
            },
            "value": "onDeleteUser",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6233,
              "start": 6229,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6233,
                "start": 6229,
              },
              "value": "User",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 6277,
        "start": 5239,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 5256,
          "start": 5244,
        },
        "value": "Subscription",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6339,
            "start": 6319,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6325,
              "start": 6319,
            },
            "value": "postID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6339,
              "start": 6327,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6339,
                "start": 6327,
              },
              "value": "ModelIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6364,
            "start": 6342,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6350,
              "start": 6342,
            },
            "value": "editorID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6364,
              "start": 6352,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6364,
                "start": 6352,
              },
              "value": "ModelIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6403,
            "start": 6367,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6370,
              "start": 6367,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 6403,
              "start": 6372,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 6402,
                "start": 6373,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6402,
                  "start": 6373,
                },
                "value": "ModelPostEditorConditionInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6441,
            "start": 6406,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6408,
              "start": 6406,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 6441,
              "start": 6410,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 6440,
                "start": 6411,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6440,
                  "start": 6411,
                },
                "value": "ModelPostEditorConditionInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6478,
            "start": 6444,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6447,
              "start": 6444,
            },
            "value": "not",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6478,
              "start": 6449,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6478,
                "start": 6449,
              },
              "value": "ModelPostEditorConditionInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6508,
            "start": 6481,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6489,
              "start": 6481,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6508,
              "start": 6491,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6508,
                "start": 6491,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6538,
            "start": 6511,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6520,
              "start": 6511,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6538,
              "start": 6522,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6538,
                "start": 6522,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6568,
            "start": 6541,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6550,
              "start": 6541,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6568,
              "start": 6552,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6568,
                "start": 6552,
              },
              "value": "ModelStringInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 6570,
        "start": 6279,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 6314,
          "start": 6285,
        },
        "value": "ModelPostEditorConditionInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6610,
            "start": 6604,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6606,
              "start": 6604,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6610,
              "start": 6608,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6610,
                "start": 6608,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6624,
            "start": 6613,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6619,
              "start": 6613,
            },
            "value": "postID",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 6624,
              "start": 6621,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 6623,
                "start": 6621,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6623,
                  "start": 6621,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6640,
            "start": 6627,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6635,
              "start": 6627,
            },
            "value": "editorID",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 6640,
              "start": 6637,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 6639,
                "start": 6637,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6639,
                  "start": 6637,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6656,
            "start": 6643,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6651,
              "start": 6643,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6656,
              "start": 6653,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6656,
                "start": 6653,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 6658,
        "start": 6572,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 6599,
          "start": 6578,
        },
        "value": "CreatePostEditorInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6699,
            "start": 6692,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6694,
              "start": 6692,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 6699,
              "start": 6696,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 6698,
                "start": 6696,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6698,
                  "start": 6696,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6712,
            "start": 6702,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6708,
              "start": 6702,
            },
            "value": "postID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6712,
              "start": 6710,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6712,
                "start": 6710,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6727,
            "start": 6715,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6723,
              "start": 6715,
            },
            "value": "editorID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6727,
              "start": 6725,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6727,
                "start": 6725,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6743,
            "start": 6730,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6738,
              "start": 6730,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6743,
              "start": 6740,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6743,
                "start": 6740,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 6745,
        "start": 6660,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 6687,
          "start": 6666,
        },
        "value": "UpdatePostEditorInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6786,
            "start": 6779,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6781,
              "start": 6779,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 6786,
              "start": 6783,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 6785,
                "start": 6783,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 6785,
                  "start": 6783,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6802,
            "start": 6789,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6797,
              "start": 6789,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6802,
              "start": 6799,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6802,
                "start": 6799,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 6804,
        "start": 6747,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 6774,
          "start": 6753,
        },
        "value": "DeletePostEditorInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6883,
            "start": 6855,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6857,
              "start": 6855,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6883,
              "start": 6859,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6883,
                "start": 6859,
              },
              "value": "ModelSubscriptionIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6918,
            "start": 6886,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6892,
              "start": 6886,
            },
            "value": "postID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6918,
              "start": 6894,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6918,
                "start": 6894,
              },
              "value": "ModelSubscriptionIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6955,
            "start": 6921,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6929,
              "start": 6921,
            },
            "value": "editorID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6955,
              "start": 6931,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6955,
                "start": 6931,
              },
              "value": "ModelSubscriptionIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 6997,
            "start": 6958,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 6967,
              "start": 6958,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 6997,
              "start": 6969,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 6997,
                "start": 6969,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7039,
            "start": 7000,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7009,
              "start": 7000,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7039,
              "start": 7011,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7039,
                "start": 7011,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7087,
            "start": 7042,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7045,
              "start": 7042,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 7087,
              "start": 7047,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7086,
                "start": 7048,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7086,
                  "start": 7048,
                },
                "value": "ModelSubscriptionPostEditorFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7134,
            "start": 7090,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7092,
              "start": 7090,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 7134,
              "start": 7094,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7133,
                "start": 7095,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7133,
                  "start": 7095,
                },
                "value": "ModelSubscriptionPostEditorFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7164,
            "start": 7137,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7145,
              "start": 7137,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7164,
              "start": 7147,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7164,
                "start": 7147,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 7166,
        "start": 6806,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 6850,
          "start": 6812,
        },
        "value": "ModelSubscriptionPostEditorFilterInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 7211,
            "start": 7197,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7202,
              "start": 7197,
            },
            "value": "items",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 7211,
              "start": 7204,
            },
            "type": Object {
              "kind": "ListType",
              "loc": Object {
                "end": 7210,
                "start": 7204,
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 7209,
                  "start": 7205,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 7209,
                    "start": 7205,
                  },
                  "value": "User",
                },
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 7231,
            "start": 7214,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7223,
              "start": 7214,
            },
            "value": "nextToken",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7231,
              "start": 7225,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7231,
                "start": 7225,
              },
              "value": "String",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 7257,
            "start": 7234,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7243,
              "start": 7234,
            },
            "value": "startedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7257,
              "start": 7245,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7257,
                "start": 7245,
              },
              "value": "AWSTimestamp",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 7259,
        "start": 7168,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 7192,
          "start": 7173,
        },
        "value": "ModelUserConnection",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7308,
            "start": 7292,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7294,
              "start": 7292,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7308,
              "start": 7296,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7308,
                "start": 7296,
              },
              "value": "ModelIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7337,
            "start": 7311,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7319,
              "start": 7311,
            },
            "value": "username",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7337,
              "start": 7321,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7337,
                "start": 7321,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7367,
            "start": 7340,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7349,
              "start": 7340,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7367,
              "start": 7351,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7367,
                "start": 7351,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7397,
            "start": 7370,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7379,
              "start": 7370,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7397,
              "start": 7381,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7397,
                "start": 7381,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7427,
            "start": 7400,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7403,
              "start": 7400,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 7427,
              "start": 7405,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7426,
                "start": 7406,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7426,
                  "start": 7406,
                },
                "value": "ModelUserFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7456,
            "start": 7430,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7432,
              "start": 7430,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 7456,
              "start": 7434,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7455,
                "start": 7435,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7455,
                  "start": 7435,
                },
                "value": "ModelUserFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7484,
            "start": 7459,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7462,
              "start": 7459,
            },
            "value": "not",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7484,
              "start": 7464,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7484,
                "start": 7464,
              },
              "value": "ModelUserFilterInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7514,
            "start": 7487,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7495,
              "start": 7487,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7514,
              "start": 7497,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7514,
                "start": 7497,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 7516,
        "start": 7261,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 7287,
          "start": 7267,
        },
        "value": "ModelUserFilterInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7578,
            "start": 7552,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7560,
              "start": 7552,
            },
            "value": "username",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7578,
              "start": 7562,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7578,
                "start": 7562,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7611,
            "start": 7581,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7584,
              "start": 7581,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 7611,
              "start": 7586,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7610,
                "start": 7587,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7610,
                  "start": 7587,
                },
                "value": "ModelUserConditionInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7643,
            "start": 7614,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7616,
              "start": 7614,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 7643,
              "start": 7618,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7642,
                "start": 7619,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7642,
                  "start": 7619,
                },
                "value": "ModelUserConditionInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7674,
            "start": 7646,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7649,
              "start": 7646,
            },
            "value": "not",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7674,
              "start": 7651,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7674,
                "start": 7651,
              },
              "value": "ModelUserConditionInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7704,
            "start": 7677,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7685,
              "start": 7677,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7704,
              "start": 7687,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7704,
                "start": 7687,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7734,
            "start": 7707,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7716,
              "start": 7707,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7734,
              "start": 7718,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7734,
                "start": 7718,
              },
              "value": "ModelStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7764,
            "start": 7737,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7746,
              "start": 7737,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7764,
              "start": 7748,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7764,
                "start": 7748,
              },
              "value": "ModelStringInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 7766,
        "start": 7518,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 7547,
          "start": 7524,
        },
        "value": "ModelUserConditionInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7800,
            "start": 7794,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7796,
              "start": 7794,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7800,
              "start": 7798,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7800,
                "start": 7798,
              },
              "value": "ID",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7820,
            "start": 7803,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7811,
              "start": 7803,
            },
            "value": "username",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 7820,
              "start": 7813,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7819,
                "start": 7813,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7819,
                  "start": 7813,
                },
                "value": "String",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7836,
            "start": 7823,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7831,
              "start": 7823,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7836,
              "start": 7833,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7836,
                "start": 7833,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 7838,
        "start": 7768,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 7789,
          "start": 7774,
        },
        "value": "CreateUserInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7873,
            "start": 7866,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7868,
              "start": 7866,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 7873,
              "start": 7870,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7872,
                "start": 7870,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7872,
                  "start": 7870,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7892,
            "start": 7876,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7884,
              "start": 7876,
            },
            "value": "username",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7892,
              "start": 7886,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7892,
                "start": 7886,
              },
              "value": "String",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7908,
            "start": 7895,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7903,
              "start": 7895,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7908,
              "start": 7905,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7908,
                "start": 7905,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 7910,
        "start": 7840,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 7861,
          "start": 7846,
        },
        "value": "UpdateUserInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7945,
            "start": 7938,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7940,
              "start": 7938,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 7945,
              "start": 7942,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 7944,
                "start": 7942,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 7944,
                  "start": 7942,
                },
                "value": "ID",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 7961,
            "start": 7948,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 7956,
              "start": 7948,
            },
            "value": "_version",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 7961,
              "start": 7958,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 7961,
                "start": 7958,
              },
              "value": "Int",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 7963,
        "start": 7912,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 7933,
          "start": 7918,
        },
        "value": "DeleteUserInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8036,
            "start": 8008,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8010,
              "start": 8008,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8036,
              "start": 8012,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8036,
                "start": 8012,
              },
              "value": "ModelSubscriptionIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8077,
            "start": 8039,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8047,
              "start": 8039,
            },
            "value": "username",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8077,
              "start": 8049,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8077,
                "start": 8049,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8119,
            "start": 8080,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8089,
              "start": 8080,
            },
            "value": "createdAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8119,
              "start": 8091,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8119,
                "start": 8091,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8161,
            "start": 8122,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8131,
              "start": 8122,
            },
            "value": "updatedAt",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8161,
              "start": 8133,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8161,
                "start": 8133,
              },
              "value": "ModelSubscriptionStringInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8203,
            "start": 8164,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8167,
              "start": 8164,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 8203,
              "start": 8169,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 8202,
                "start": 8170,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 8202,
                  "start": 8170,
                },
                "value": "ModelSubscriptionUserFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8244,
            "start": 8206,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8208,
              "start": 8206,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 8244,
              "start": 8210,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 8243,
                "start": 8211,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 8243,
                  "start": 8211,
                },
                "value": "ModelSubscriptionUserFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8274,
            "start": 8247,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8255,
              "start": 8247,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8274,
              "start": 8257,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8274,
                "start": 8257,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 8276,
        "start": 7965,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 8003,
          "start": 7971,
        },
        "value": "ModelSubscriptionUserFilterInput",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 8333,
            "start": 8313,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8318,
              "start": 8313,
            },
            "value": "items",
          },
          "type": Object {
            "kind": "NonNullType",
            "loc": Object {
              "end": 8333,
              "start": 8320,
            },
            "type": Object {
              "kind": "ListType",
              "loc": Object {
                "end": 8332,
                "start": 8320,
              },
              "type": Object {
                "kind": "NamedType",
                "loc": Object {
                  "end": 8331,
                  "start": 8321,
                },
                "name": Object {
                  "kind": "Name",
                  "loc": Object {
                    "end": 8331,
                    "start": 8321,
                  },
                  "value": "PostEditor",
                },
              },
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 8353,
            "start": 8336,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8345,
              "start": 8336,
            },
            "value": "nextToken",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8353,
              "start": 8347,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8353,
                "start": 8347,
              },
              "value": "String",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 8355,
        "start": 8278,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 8308,
          "start": 8283,
        },
        "value": "ModelPostEditorConnection",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8410,
            "start": 8394,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8396,
              "start": 8394,
            },
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8410,
              "start": 8398,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8410,
                "start": 8398,
              },
              "value": "ModelIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8433,
            "start": 8413,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8419,
              "start": 8413,
            },
            "value": "postID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8433,
              "start": 8421,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8433,
                "start": 8421,
              },
              "value": "ModelIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8458,
            "start": 8436,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8444,
              "start": 8436,
            },
            "value": "editorID",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8458,
              "start": 8446,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8458,
                "start": 8446,
              },
              "value": "ModelIDInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8494,
            "start": 8461,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8464,
              "start": 8461,
            },
            "value": "and",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 8494,
              "start": 8466,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 8493,
                "start": 8467,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 8493,
                  "start": 8467,
                },
                "value": "ModelPostEditorFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8529,
            "start": 8497,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8499,
              "start": 8497,
            },
            "value": "or",
          },
          "type": Object {
            "kind": "ListType",
            "loc": Object {
              "end": 8529,
              "start": 8501,
            },
            "type": Object {
              "kind": "NamedType",
              "loc": Object {
                "end": 8528,
                "start": 8502,
              },
              "name": Object {
                "kind": "Name",
                "loc": Object {
                  "end": 8528,
                  "start": 8502,
                },
                "value": "ModelPostEditorFilterInput",
              },
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8563,
            "start": 8532,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8535,
              "start": 8532,
            },
            "value": "not",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8563,
              "start": 8537,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8563,
                "start": 8537,
              },
              "value": "ModelPostEditorFilterInput",
            },
          },
        },
        Object {
          "defaultValue": undefined,
          "description": undefined,
          "directives": Array [],
          "kind": "InputValueDefinition",
          "loc": Object {
            "end": 8593,
            "start": 8566,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 8574,
              "start": 8566,
            },
            "value": "_deleted",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 8593,
              "start": 8576,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 8593,
                "start": 8576,
              },
              "value": "ModelBooleanInput",
            },
          },
        },
      ],
      "kind": "InputObjectTypeDefinition",
      "loc": Object {
        "end": 8595,
        "start": 8357,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 8389,
          "start": 8363,
        },
        "value": "ModelPostEditorFilterInput",
      },
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 8596,
    "start": 0,
  },
}
`;

exports[`validates VTL of a complex schema 1`] = `
Object {
  "Child.parents.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttributes.get(\\"id\\"), $ctx.source.id) )
#if( $util.isNull($partitionKeyValue) )
  #set( $result = {
  \\"items\\":   []
} )
  #return($result)
#else
  #set( $limit = $util.defaultIfNull($context.args.limit, 100) )
  #set( $sortKeyValue0 = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"name\\"), $ctx.source.name) )
  #set( $query = {
  \\"expression\\": \\"#partitionKey = :partitionKey\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"childID\\"
  },
  \\"expressionValues\\": {
      \\":partitionKey\\": $util.dynamodb.toDynamoDB($partitionKeyValue)
  }
} )
  #set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    #set( $filter = $ctx.stash.authFilter )
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
    #end
  #else
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = $args.filter )
    #end
  #end
  #if( !$util.isNullOrEmpty($filter) )
    #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
    #if( !$util.isNullOrBlank($filterExpression.expression) )
      #if( $filterExpression.expressionValues.size() == 0 )
        $util.qr($filterExpression.remove(\\"expressionValues\\"))
      #end
      #set( $filter = $filterExpression )
    #end
  #end
{
      \\"version\\": \\"2018-05-29\\",
      \\"operation\\": \\"Query\\",
      \\"query\\":     $util.toJson($query),
      \\"scanIndexForward\\":     #if( $context.args.sortDirection )
      #if( $context.args.sortDirection == \\"ASC\\" )
true
      #else
false
      #end
    #else
true
    #end,
      \\"filter\\":     #if( $filter )
$util.toJson($filter)
    #else
null
    #end,
      \\"limit\\": $limit,
      \\"nextToken\\":     #if( $context.args.nextToken )
$util.toJson($context.args.nextToken)
    #else
null
    #end,
      \\"index\\": \\"gsi-Child.parents\\"
  }
#end",
  "Child.parents.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$result )
    #set( $result = $ctx.result )
  #end
  $util.toJson($result)
#end",
  "Friendship.friend.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"friendID\\"), $ctx.source.friendID) )
#if( $util.isNull($partitionKeyValue) )
  #return
#else
  #set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
  $util.qr($GetRequest.put(\\"query\\", {
  \\"expression\\": \\"#partitionKey = :partitionValue\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"id\\"
  },
  \\"expressionValues\\": {
      \\":partitionValue\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($partitionKeyValue, \\"___xamznone____\\")))
  }
}))
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
  #end
  $util.toJson($GetRequest)
#end",
  "Friendship.friend.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
    $util.toJson($ctx.result.items[0])
  #else
    #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
    #end
    $util.toJson(null)
  #end
#end",
  "Mutation.createChild.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createChild.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createChild.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"name\\": $util.dynamodb.toDynamoDB($mergedValues.name)
}))
## [End] Set the primary key. **

{}",
  "Mutation.createChild.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"Child\\"))
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createChild.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.createFriendship.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createFriendship.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createFriendship.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"Friendship\\"))
#set( $nullIndexFields = [] )
#set( $indexFields = [\\"userID\\"] )
#foreach( $entry in $util.map.copyAndRetainAllKeys($mergedValues, $indexFields).entrySet() )
  #if( $util.isNull($entry.value) )
    $util.qr($nullIndexFields.add($entry.key))
  #end
#end
#set( $mergedValues = $util.map.copyAndRemoveAllKeys($mergedValues, $nullIndexFields) )
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createFriendship.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.createParent.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createParent.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createParent.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"Parent\\"))
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createParent.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.createPost.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createPost.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createPost.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"Post\\"))
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createPost.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.createPostAuthor.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createPostAuthor.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createPostAuthor.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"PostAuthor\\"))
#set( $nullIndexFields = [] )
#set( $indexFields = [\\"authorID\\"] )
#foreach( $entry in $util.map.copyAndRetainAllKeys($mergedValues, $indexFields).entrySet() )
  #if( $util.isNull($entry.value) )
    $util.qr($nullIndexFields.add($entry.key))
  #end
#end
#set( $mergedValues = $util.map.copyAndRemoveAllKeys($mergedValues, $nullIndexFields) )
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createPostAuthor.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.createPostModel.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createPostModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createPostModel.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"PostModel\\"))
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createPostModel.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.createUser.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createUser.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createUser.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"name#surname\\": $util.dynamodb.toDynamoDB(\\"\${mergedValues.name}#\${mergedValues.surname}\\")
}))
## [End] Set the primary key. **
#if( $util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) )
  $util.qr($ctx.stash.metadata.put(\\"dynamodbNameOverrideMap\\", { 'name#surname': \\"nameSurname\\" }))
#else
  $util.qr($ctx.stash.metadata.dynamodbNameOverrideMap.put('name#surname', \\"nameSurname\\"))
#end
$util.qr($ctx.args.input.put('name#surname',\\"\${mergedValues.name}#\${mergedValues.surname}\\"))
{}",
  "Mutation.createUser.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"User\\"))
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createUser.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.createUserModel.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"id\\", $util.autoId()))
$util.qr($ctx.stash.defaultValues.put(\\"createdAt\\", $createdAt))
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $createdAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.createUserModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.createUserModel.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"rollNumber\\": $util.dynamodb.toDynamoDB($mergedValues.rollNumber)
}))
## [End] Set the primary key. **

{}",
  "Mutation.createUserModel.req.vtl": "## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put(\\"__typename\\", \\"UserModel\\"))
#set( $PutObject = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"PutItem\\",
  \\"attributeValues\\":   $util.dynamodb.toMapValues($mergedValues),
  \\"condition\\": $condition
} )
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": false
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": false
  }
}))
#end
## End - key condition **
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($PutObject.put(\\"condition\\", $Conditions))
#end
#if( $ctx.stash.metadata.modelObjectKey )
  $util.qr($PutObject.put(\\"key\\", $ctx.stash.metadata.modelObjectKey))
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($mergedValues.id)
} )
  $util.qr($PutObject.put(\\"key\\", $Key))
#end
$util.toJson($PutObject)
## [End] Create Request template. **",
  "Mutation.createUserModel.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deleteChild.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deleteChild.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"name\\": $util.dynamodb.toDynamoDB($mergedValues.name)
}))
## [End] Set the primary key. **
{}",
  "Mutation.deleteChild.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deleteChild.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deleteFriendship.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deleteFriendship.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deleteFriendship.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deleteParent.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deleteParent.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deleteParent.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deletePost.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deletePost.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deletePost.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deletePostAuthor.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deletePostAuthor.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deletePostAuthor.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deletePostModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deletePostModel.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deletePostModel.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deleteUser.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deleteUser.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"name#surname\\": $util.dynamodb.toDynamoDB(\\"\${mergedValues.name}#\${mergedValues.surname}\\")
}))
## [End] Set the primary key. **
{}",
  "Mutation.deleteUser.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deleteUser.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.deleteUserModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.deleteUserModel.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"rollNumber\\": $util.dynamodb.toDynamoDB($mergedValues.rollNumber)
}))
## [End] Set the primary key. **
{}",
  "Mutation.deleteUserModel.req.vtl": "## [Start] Delete Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $DeleteRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"DeleteItem\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
$util.qr($DeleteRequest.put(\\"key\\", $Key))
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($DeleteRequest.put(\\"condition\\", $Conditions))
#end
$util.toJson($DeleteRequest)
## [End] Delete Request template. **",
  "Mutation.deleteUserModel.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updateChild.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updateChild.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updateChild.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"name\\": $util.dynamodb.toDynamoDB($mergedValues.name)
}))
## [End] Set the primary key. **

{}",
  "Mutation.updateChild.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updateChild.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updateFriendship.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updateFriendship.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updateFriendship.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updateFriendship.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updateParent.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updateParent.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updateParent.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updateParent.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updatePost.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updatePost.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updatePost.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updatePost.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updatePostAuthor.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updatePostAuthor.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updatePostAuthor.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updatePostAuthor.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updatePostModel.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updatePostModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updatePostModel.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updatePostModel.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updateUser.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updateUser.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updateUser.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"name#surname\\": $util.dynamodb.toDynamoDB(\\"\${mergedValues.name}#\${mergedValues.surname}\\")
}))
## [End] Set the primary key. **
#if( $util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) )
  $util.qr($ctx.stash.metadata.put(\\"dynamodbNameOverrideMap\\", { 'name#surname': \\"nameSurname\\" }))
#else
  $util.qr($ctx.stash.metadata.dynamodbNameOverrideMap.put('name#surname', \\"nameSurname\\"))
#end
$util.qr($ctx.args.input.put('name#surname',\\"\${mergedValues.name}#\${mergedValues.surname}\\"))
{}",
  "Mutation.updateUser.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updateUser.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Mutation.updateUserModel.init.1.req.vtl": "## [Start] Initialization default values. **
$util.qr($ctx.stash.put(\\"defaultValues\\", $util.defaultIfNull($ctx.stash.defaultValues, {})))
#set( $updatedAt = $util.time.nowISO8601() )
$util.qr($ctx.stash.defaultValues.put(\\"updatedAt\\", $updatedAt))
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Initialization default values. **",
  "Mutation.updateUserModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Mutation.updateUserModel.preAuth.1.req.vtl": "## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($mergedValues.id),
  \\"rollNumber\\": $util.dynamodb.toDynamoDB($mergedValues.rollNumber)
}))
## [End] Set the primary key. **

{}",
  "Mutation.updateUserModel.req.vtl": "## [Start] Mutation Update resolver. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
## Initialize the vars for creating ddb expression **
#set( $expNames = {} )
#set( $expValues = {} )
#set( $expSet = {} )
#set( $expAdd = {} )
#set( $expRemove = [] )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $Key = $ctx.stash.metadata.modelObjectKey )
#else
  #set( $Key = {
  \\"id\\":   $util.dynamodb.toDynamoDB($args.input.id)
} )
#end
## Model key **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyFields = [] )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyFields.add(\\"$entry.key\\"))
  #end
#else
  #set( $keyFields = [\\"id\\"] )
#end
#foreach( $entry in $util.map.copyAndRemoveAllKeys($mergedValues, $keyFields).entrySet() )
  #if( !$util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) && $ctx.stash.metadata.dynamodbNameOverrideMap.containsKey(\\"$entry.key\\") )
    #set( $entryKeyAttributeName = $ctx.stash.metadata.dynamodbNameOverrideMap.get(\\"$entry.key\\") )
  #else
    #set( $entryKeyAttributeName = $entry.key )
  #end
  #if( $util.isNull($entry.value) )
    #set( $discard = $expRemove.add(\\"#$entryKeyAttributeName\\") )
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
  #else
    $util.qr($expSet.put(\\"#$entryKeyAttributeName\\", \\":$entryKeyAttributeName\\"))
    $util.qr($expNames.put(\\"#$entryKeyAttributeName\\", \\"$entry.key\\"))
    $util.qr($expValues.put(\\":$entryKeyAttributeName\\", $util.dynamodb.toDynamoDB($entry.value)))
  #end
#end
#set( $expression = \\"\\" )
#if( !$expSet.isEmpty() )
  #set( $expression = \\"SET\\" )
  #foreach( $entry in $expSet.entrySet() )
    #set( $expression = \\"$expression $entry.key = $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expAdd.isEmpty() )
  #set( $expression = \\"$expression ADD\\" )
  #foreach( $entry in $expAdd.entrySet() )
    #set( $expression = \\"$expression $entry.key $entry.value\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#if( !$expRemove.isEmpty() )
  #set( $expression = \\"$expression REMOVE\\" )
  #foreach( $entry in $expRemove )
    #set( $expression = \\"$expression $entry\\" )
    #if( $foreach.hasNext() )
      #set( $expression = \\"$expression,\\" )
    #end
  #end
#end
#set( $update = {} )
$util.qr($update.put(\\"expression\\", \\"$expression\\"))
#if( !$expNames.isEmpty() )
  $util.qr($update.put(\\"expressionNames\\", $expNames))
#end
#if( !$expValues.isEmpty() )
  $util.qr($update.put(\\"expressionValues\\", $expValues))
#end
## Begin - key condition **
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $keyConditionExpr = {} )
  #set( $keyConditionExprNames = {} )
  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )
    $util.qr($keyConditionExpr.put(\\"keyCondition$velocityCount\\", {
  \\"attributeExists\\": true
}))
    $util.qr($keyConditionExprNames.put(\\"#keyCondition$velocityCount\\", \\"$entry.key\\"))
  #end
  $util.qr($ctx.stash.conditions.add($keyConditionExpr))
#else
  $util.qr($ctx.stash.conditions.add({
  \\"id\\": {
      \\"attributeExists\\": true
  }
}))
#end
## End - key condition **
#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
  \\"and\\": $ctx.stash.conditions
} )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  #if( $Conditions.expressionValues && $Conditions.expressionValues.size() == 0 )
    #set( $Conditions = {
  \\"expression\\": $Conditions.expression,
  \\"expressionNames\\": $Conditions.expressionNames
} )
  #end
  ## End condition block **
#end
#set( $UpdateItem = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"UpdateItem\\",
  \\"key\\": $Key,
  \\"update\\": $update
} )
#if( $Conditions )
  #if( $keyConditionExprNames )
    $util.qr($Conditions.expressionNames.putAll($keyConditionExprNames))
  #end
  $util.qr($UpdateItem.put(\\"condition\\", $Conditions))
#end
$util.toJson($UpdateItem)
## [End] Mutation Update resolver. **",
  "Mutation.updateUserModel.res.vtl": "## [Start] ResponseTemplate. **
$util.qr($ctx.result.put(\\"__operation\\", \\"Mutation\\"))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Parent.child.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"childID\\"), $ctx.source.childID) )
#if( $util.isNull($partitionKeyValue) || $util.isNull($ctx.source.childName) )
  #return
#else
  #set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
  $util.qr($GetRequest.put(\\"query\\", {
  \\"expression\\": \\"#partitionKey = :partitionValue AND #sortKeyName = :sortKeyName\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"id\\",
      \\"#sortKeyName\\": \\"name\\"
  },
  \\"expressionValues\\": {
      \\":partitionValue\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($partitionKeyValue, \\"___xamznone____\\"))),
      \\":sortKeyName\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($ctx.source.childName, \\"___xamznone____\\")))
  }
}))
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
  #end
  $util.toJson($GetRequest)
#end",
  "Parent.child.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
    $util.toJson($ctx.result.items[0])
  #else
    #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
    #end
    $util.toJson(null)
  #end
#end",
  "Post.authors.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttributes.get(\\"id\\"), $ctx.source.id) )
#if( $util.isNull($partitionKeyValue) )
  #set( $result = {
  \\"items\\":   []
} )
  #return($result)
#else
  #set( $limit = $util.defaultIfNull($context.args.limit, 50) )
  #set( $query = {
  \\"expression\\": \\"#partitionKey = :partitionKey\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"postID\\"
  },
  \\"expressionValues\\": {
      \\":partitionKey\\": $util.dynamodb.toDynamoDB($partitionKeyValue)
  }
} )
  #set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    #set( $filter = $ctx.stash.authFilter )
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
    #end
  #else
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = $args.filter )
    #end
  #end
  #if( !$util.isNullOrEmpty($filter) )
    #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
    #if( !$util.isNullOrBlank($filterExpression.expression) )
      #if( $filterExpression.expressionValues.size() == 0 )
        $util.qr($filterExpression.remove(\\"expressionValues\\"))
      #end
      #set( $filter = $filterExpression )
    #end
  #end
{
      \\"version\\": \\"2018-05-29\\",
      \\"operation\\": \\"Query\\",
      \\"query\\":     $util.toJson($query),
      \\"scanIndexForward\\":     #if( $context.args.sortDirection )
      #if( $context.args.sortDirection == \\"ASC\\" )
true
      #else
false
      #end
    #else
true
    #end,
      \\"filter\\":     #if( $filter )
$util.toJson($filter)
    #else
null
    #end,
      \\"limit\\": $limit,
      \\"nextToken\\":     #if( $context.args.nextToken )
$util.toJson($context.args.nextToken)
    #else
null
    #end,
      \\"index\\": \\"gsi-Post.authors\\"
  }
#end",
  "Post.authors.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$result )
    #set( $result = $ctx.result )
  #end
  $util.toJson($result)
#end",
  "Post.postAuthor.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttributes.get(\\"id\\"), $ctx.source.id) )
#if( $util.isNull($partitionKeyValue) )
  #set( $result = {
  \\"items\\":   []
} )
  #return($result)
#else
  #set( $query = {
  \\"expression\\": \\"#partitionKey = :partitionKey\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"postID\\"
  },
  \\"expressionValues\\": {
      \\":partitionKey\\": $util.dynamodb.toDynamoDB($partitionKeyValue)
  }
} )
  #set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    #set( $filter = $ctx.stash.authFilter )
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
    #end
  #else
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = $args.filter )
    #end
  #end
  #if( !$util.isNullOrEmpty($filter) )
    #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
    #if( !$util.isNullOrBlank($filterExpression.expression) )
      #if( $filterExpression.expressionValues.size() == 0 )
        $util.qr($filterExpression.remove(\\"expressionValues\\"))
      #end
      #set( $filter = $filterExpression )
    #end
  #end
{
      \\"version\\": \\"2018-05-29\\",
      \\"operation\\": \\"Query\\",
      \\"query\\":     $util.toJson($query),
      \\"scanIndexForward\\":     #if( $context.args.sortDirection )
      #if( $context.args.sortDirection == \\"ASC\\" )
true
      #else
false
      #end
    #else
true
    #end,
      \\"filter\\":     #if( $filter )
$util.toJson($filter)
    #else
null
    #end,
      \\"limit\\": $limit,
      \\"nextToken\\":     #if( $context.args.nextToken )
$util.toJson($context.args.nextToken)
    #else
null
    #end,
      \\"index\\": \\"gsi-Post.postAuthor\\"
  }
#end",
  "Post.postAuthor.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$result )
    #set( $result = $ctx.result )
  #end
  $util.toJson($result)
#end",
  "PostAuthor.post.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"postID\\"), $ctx.source.postID) )
#if( $util.isNull($partitionKeyValue) )
  #return
#else
  #set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
  $util.qr($GetRequest.put(\\"query\\", {
  \\"expression\\": \\"#partitionKey = :partitionValue\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"id\\"
  },
  \\"expressionValues\\": {
      \\":partitionValue\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($partitionKeyValue, \\"___xamznone____\\")))
  }
}))
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
  #end
  $util.toJson($GetRequest)
#end",
  "PostAuthor.post.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
    $util.toJson($ctx.result.items[0])
  #else
    #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
    #end
    $util.toJson(null)
  #end
#end",
  "PostAuthor.userModel.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"userModelID\\"), $ctx.source.userModelID) )
#if( $util.isNull($partitionKeyValue) || $util.isNull($ctx.source.userModelRollNumber) )
  #return
#else
  #set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
  $util.qr($GetRequest.put(\\"query\\", {
  \\"expression\\": \\"#partitionKey = :partitionValue AND #sortKeyName = :sortKeyName\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"id\\",
      \\"#sortKeyName\\": \\"rollNumber\\"
  },
  \\"expressionValues\\": {
      \\":partitionValue\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($partitionKeyValue, \\"___xamznone____\\"))),
      \\":sortKeyName\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNull($ctx.source.userModelRollNumber, \\"___xamznone____\\")))
  }
}))
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
  #end
  $util.toJson($GetRequest)
#end",
  "PostAuthor.userModel.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
    $util.toJson($ctx.result.items[0])
  #else
    #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
    #end
    $util.toJson(null)
  #end
#end",
  "PostModel.authors.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttributes.get(\\"id\\"), $ctx.source.id) )
#if( $util.isNull($partitionKeyValue) )
  #set( $result = {
  \\"items\\":   []
} )
  #return($result)
#else
  #set( $limit = $util.defaultIfNull($context.args.limit, 100) )
  #set( $query = {
  \\"expression\\": \\"#partitionKey = :partitionKey\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"postModelID\\"
  },
  \\"expressionValues\\": {
      \\":partitionKey\\": $util.dynamodb.toDynamoDB($partitionKeyValue)
  }
} )
  #set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    #set( $filter = $ctx.stash.authFilter )
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
    #end
  #else
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = $args.filter )
    #end
  #end
  #if( !$util.isNullOrEmpty($filter) )
    #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
    #if( !$util.isNullOrBlank($filterExpression.expression) )
      #if( $filterExpression.expressionValues.size() == 0 )
        $util.qr($filterExpression.remove(\\"expressionValues\\"))
      #end
      #set( $filter = $filterExpression )
    #end
  #end
{
      \\"version\\": \\"2018-05-29\\",
      \\"operation\\": \\"Query\\",
      \\"query\\":     $util.toJson($query),
      \\"scanIndexForward\\":     #if( $context.args.sortDirection )
      #if( $context.args.sortDirection == \\"ASC\\" )
true
      #else
false
      #end
    #else
true
    #end,
      \\"filter\\":     #if( $filter )
$util.toJson($filter)
    #else
null
    #end,
      \\"limit\\": $limit,
      \\"nextToken\\":     #if( $context.args.nextToken )
$util.toJson($context.args.nextToken)
    #else
null
    #end,
      \\"index\\": \\"gsi-PostModel.authors\\"
  }
#end",
  "PostModel.authors.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$result )
    #set( $result = $ctx.result )
  #end
  $util.toJson($result)
#end",
  "PostModel.singleAuthor.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"authorID\\"), $ctx.source.authorID) )
#if( $util.isNull($partitionKeyValue) || $util.isNull($ctx.source.authorName) || $util.isNull($ctx.source.authorSurname) )
  #return
#else
  #set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
  $util.qr($GetRequest.put(\\"query\\", {
  \\"expression\\": \\"#partitionKey = :partitionValue AND #sortKeyName = :sortKeyName\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"id\\",
      \\"#sortKeyName\\": \\"name#surname\\"
  },
  \\"expressionValues\\": {
      \\":partitionValue\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($partitionKeyValue, \\"___xamznone____\\"))),
      \\":sortKeyName\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank(\\"\${ctx.source.authorName}#\${ctx.source.authorSurname}\\", \\"___xamznone____\\")))
  }
}))
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
  #end
  $util.toJson($GetRequest)
#end",
  "PostModel.singleAuthor.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
    $util.toJson($ctx.result.items[0])
  #else
    #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
    #end
    $util.toJson(null)
  #end
#end",
  "Query.getChild.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getChild.preAuth.1.req.vtl": "## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($ctx.args.id),
  \\"name\\": $util.dynamodb.toDynamoDB($ctx.args.name)
}))
## [End] Set the primary key. **
{}",
  "Query.getChild.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getChild.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.getFriendship.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getFriendship.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getFriendship.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.getParent.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getParent.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getParent.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.getPost.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getPost.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getPost.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.getPostAuthor.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getPostAuthor.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getPostAuthor.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.getPostModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getPostModel.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getPostModel.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.getUser.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getUser.preAuth.1.req.vtl": "## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($ctx.args.id),
  \\"name#surname\\": $util.dynamodb.toDynamoDB(\\"\${ctx.args.name}#\${ctx.args.surname}\\")
}))
## [End] Set the primary key. **
{}",
  "Query.getUser.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getUser.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.getUserModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.getUserModel.preAuth.1.req.vtl": "## [Start] Set the primary key. **
$util.qr($ctx.stash.metadata.put(\\"modelObjectKey\\", {
  \\"id\\": $util.dynamodb.toDynamoDB($ctx.args.id),
  \\"rollNumber\\": $util.dynamodb.toDynamoDB($ctx.args.rollNumber)
}))
## [End] Set the primary key. **
{}",
  "Query.getUserModel.req.vtl": "## [Start] Get Request template. **
#set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
#if( $ctx.stash.metadata.modelObjectKey )
  #set( $expression = \\"\\" )
  #set( $expressionNames = {} )
  #set( $expressionValues = {} )
  #foreach( $item in $ctx.stash.metadata.modelObjectKey.entrySet() )
    #set( $expression = \\"$expression#keyCount$velocityCount = :valueCount$velocityCount AND \\" )
    $util.qr($expressionNames.put(\\"#keyCount$velocityCount\\", $item.key))
    $util.qr($expressionValues.put(\\":valueCount$velocityCount\\", $item.value))
  #end
  #set( $expression = $expression.replaceAll(\\"AND $\\", \\"\\") )
  #set( $query = {
  \\"expression\\": $expression,
  \\"expressionNames\\": $expressionNames,
  \\"expressionValues\\": $expressionValues
} )
#else
  #set( $query = {
  \\"expression\\": \\"id = :id\\",
  \\"expressionValues\\": {
      \\":id\\":     $util.parseJson($util.dynamodb.toDynamoDBJson($ctx.args.id))
  }
} )
#end
$util.qr($GetRequest.put(\\"query\\", $query))
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
#end
$util.toJson($GetRequest)
## [End] Get Request template. **",
  "Query.getUserModel.res.vtl": "## [Start] Get Response template. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
  $util.toJson($ctx.result.items[0])
#else
  #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
  #end
  $util.toJson(null)
#end
## [End] Get Response template. **",
  "Query.listChildren.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listChildren.preAuth.1.req.vtl": "## [Start] Set query expression for key **
#if( $util.isNull($ctx.args.id) && !$util.isNull($ctx.args.sortDirection) )
  $util.error(\\"When providing argument 'sortDirection' you must also provide argument 'id'.\\", \\"InvalidArgumentsError\\")
#end
#set( $modelQueryExpression = {} )
## [Start] Validate key arguments. **
#if( !$util.isNull($ctx.args.name) && $util.isNull($ctx.args.id) )
  $util.error(\\"When providing argument 'name' you must also provide arguments id\\", \\"InvalidArgumentsError\\")
#end
## [End] Validate key arguments. **
#if( !$util.isNull($ctx.args.id) )
  #set( $modelQueryExpression.expression = \\"#id = :id\\" )
  #set( $modelQueryExpression.expressionNames = {
  \\"#id\\": \\"id\\"
} )
  #set( $modelQueryExpression.expressionValues = {
  \\":id\\": {
      \\"S\\": \\"$ctx.args.id\\"
  }
} )
#end
## [Start] Applying Key Condition **
#if( !$util.isNull($ctx.args.name) && !$util.isNull($ctx.args.name.beginsWith) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND begins_with(#sortKey, :sortKey)\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$ctx.args.name.beginsWith\\" }))
#end
#if( !$util.isNull($ctx.args.name) && !$util.isNull($ctx.args.name.between) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey BETWEEN :sortKey0 AND :sortKey1\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey0\\", { \\"S\\": \\"$ctx.args.name.between[0]\\" }))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey1\\", { \\"S\\": \\"$ctx.args.name.between[1]\\" }))
#end
#if( !$util.isNull($ctx.args.name) && !$util.isNull($ctx.args.name.eq) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey = :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$ctx.args.name.eq\\" }))
#end
#if( !$util.isNull($ctx.args.name) && !$util.isNull($ctx.args.name.lt) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey < :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$ctx.args.name.lt\\" }))
#end
#if( !$util.isNull($ctx.args.name) && !$util.isNull($ctx.args.name.le) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey <= :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$ctx.args.name.le\\" }))
#end
#if( !$util.isNull($ctx.args.name) && !$util.isNull($ctx.args.name.gt) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey > :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$ctx.args.name.gt\\" }))
#end
#if( !$util.isNull($ctx.args.name) && !$util.isNull($ctx.args.name.ge) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey >= :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$ctx.args.name.ge\\" }))
#end
## [End] Applying Key Condition **
## [End] Set query expression for key **
$util.qr($ctx.stash.put(\\"modelQueryExpression\\", $modelQueryExpression))
{}",
  "Query.listChildren.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listChildren.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Query.listFriendships.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listFriendships.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listFriendships.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Query.listParents.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listParents.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listParents.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Query.listPostAuthors.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listPostAuthors.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listPostAuthors.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Query.listPostModels.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listPostModels.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listPostModels.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Query.listPosts.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listPosts.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listPosts.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Query.listUserModels.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listUserModels.preAuth.1.req.vtl": "## [Start] Set query expression for key **
#if( $util.isNull($ctx.args.id) && !$util.isNull($ctx.args.sortDirection) )
  $util.error(\\"When providing argument 'sortDirection' you must also provide argument 'id'.\\", \\"InvalidArgumentsError\\")
#end
#set( $modelQueryExpression = {} )
## [Start] Validate key arguments. **
#if( !$util.isNull($ctx.args.rollNumber) && $util.isNull($ctx.args.id) )
  $util.error(\\"When providing argument 'rollNumber' you must also provide arguments id\\", \\"InvalidArgumentsError\\")
#end
## [End] Validate key arguments. **
#if( !$util.isNull($ctx.args.id) )
  #set( $modelQueryExpression.expression = \\"#id = :id\\" )
  #set( $modelQueryExpression.expressionNames = {
  \\"#id\\": \\"id\\"
} )
  #set( $modelQueryExpression.expressionValues = {
  \\":id\\": {
      \\"S\\": \\"$ctx.args.id\\"
  }
} )
#end
## [Start] Applying Key Condition **
#if( !$util.isNull($ctx.args.rollNumber) && !$util.isNull($ctx.args.rollNumber.beginsWith) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND begins_with(#sortKey, :sortKey)\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"rollNumber\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"N\\": \\"$ctx.args.rollNumber.beginsWith\\" }))
#end
#if( !$util.isNull($ctx.args.rollNumber) && !$util.isNull($ctx.args.rollNumber.between) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey BETWEEN :sortKey0 AND :sortKey1\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"rollNumber\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey0\\", { \\"N\\": \\"$ctx.args.rollNumber.between[0]\\" }))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey1\\", { \\"N\\": \\"$ctx.args.rollNumber.between[1]\\" }))
#end
#if( !$util.isNull($ctx.args.rollNumber) && !$util.isNull($ctx.args.rollNumber.eq) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey = :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"rollNumber\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"N\\": \\"$ctx.args.rollNumber.eq\\" }))
#end
#if( !$util.isNull($ctx.args.rollNumber) && !$util.isNull($ctx.args.rollNumber.lt) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey < :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"rollNumber\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"N\\": \\"$ctx.args.rollNumber.lt\\" }))
#end
#if( !$util.isNull($ctx.args.rollNumber) && !$util.isNull($ctx.args.rollNumber.le) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey <= :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"rollNumber\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"N\\": \\"$ctx.args.rollNumber.le\\" }))
#end
#if( !$util.isNull($ctx.args.rollNumber) && !$util.isNull($ctx.args.rollNumber.gt) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey > :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"rollNumber\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"N\\": \\"$ctx.args.rollNumber.gt\\" }))
#end
#if( !$util.isNull($ctx.args.rollNumber) && !$util.isNull($ctx.args.rollNumber.ge) )
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey >= :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"rollNumber\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"N\\": \\"$ctx.args.rollNumber.ge\\" }))
#end
## [End] Applying Key Condition **
## [End] Set query expression for key **
$util.qr($ctx.stash.put(\\"modelQueryExpression\\", $modelQueryExpression))
{}",
  "Query.listUserModels.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listUserModels.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Query.listUsers.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Query.listUsers.preAuth.1.req.vtl": "## [Start] Set query expression for key **
#if( $util.isNull($ctx.args.id) && !$util.isNull($ctx.args.sortDirection) )
  $util.error(\\"When providing argument 'sortDirection' you must also provide argument 'id'.\\", \\"InvalidArgumentsError\\")
#end
#set( $modelQueryExpression = {} )
## [Start] Validate key arguments. **
#if( !$util.isNull($ctx.args.nameSurname) && $util.isNullOrBlank($ctx.args.id) )
  $util.error(\\"When providing argument 'nameSurname' you must also provide 'id'.\\", \\"InvalidArgumentsError\\")
#end
#if( !$util.isNull($ctx.args.nameSurname) )
  #set( $sortKeyArgumentOperations = $ctx.args.nameSurname.keySet() )
  #if( $sortKeyArgumentOperations.size() > 1 )
    $util.error(\\"Argument nameSurname must specify at most one key condition operation.\\", \\"InvalidArgumentsError\\")
  #end
  #foreach( $operation in $sortKeyArgumentOperations )
    #if( $operation == \\"between\\" )
      #if( $ctx.args.nameSurname.between.size() != 2 )
        $util.error(\\"Argument 'nameSurname.between' expects exactly two elements.\\", \\"InvalidArgumentsError\\")
      #end
      #if( !$util.isNullOrBlank($ctx.args.nameSurname.between[0].surname) && $util.isNullOrBlank($ctx.args.nameSurname.between[0].name) )
        $util.error(\\"When providing argument 'nameSurname.between[0].surname' you must also provide 'nameSurname.between[0].name'.\\", \\"InvalidArgumentsError\\")
      #end
      #if( !$util.isNullOrBlank($ctx.args.nameSurname.between[1].surname) && $util.isNullOrBlank($ctx.args.nameSurname.between[1].name) )
        $util.error(\\"When providing argument 'nameSurname.between[1].surname' you must also provide 'nameSurname.between[1].name'.\\", \\"InvalidArgumentsError\\")
      #end
    #else
      #if( !$util.isNullOrBlank($ctx.args.nameSurname.get(\\"$operation\\").surname) && $util.isNullOrBlank($ctx.args.nameSurname.get(\\"$operation\\").name) )
        $util.error(\\"When providing argument 'nameSurname.$operation.surname' you must also provide 'nameSurname.$operation.name'.\\", \\"InvalidArgumentsError\\")
      #end
    #end
  #end
#end
## [End] Validate key arguments. **
#if( !$util.isNull($ctx.args.id) )
  #set( $modelQueryExpression.expression = \\"#id = :id\\" )
  #set( $modelQueryExpression.expressionNames = {
  \\"#id\\": \\"id\\"
} )
  #set( $modelQueryExpression.expressionValues = {
  \\":id\\": {
      \\"S\\": \\"$ctx.args.id\\"
  }
} )
#end
## [Start] Applying Key Condition **
#set( $sortKeyValue = \\"\\" )
#set( $sortKeyValue2 = \\"\\" )
#if( !$util.isNull($ctx.args.nameSurname) && !$util.isNull($ctx.args.nameSurname.beginsWith) )
#if( !$util.isNull($ctx.args.nameSurname.beginsWith.name) ) #set( $sortKeyValue = \\"$ctx.args.nameSurname.beginsWith.name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.beginsWith.surname) ) #set( $sortKeyValue = \\"$sortKeyValue#$ctx.args.nameSurname.beginsWith.surname\\" ) #end
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND begins_with(#sortKey, :sortKey)\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name#surname\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$sortKeyValue\\" }))
#end
#if( !$util.isNull($ctx.args.nameSurname) && !$util.isNull($ctx.args.nameSurname.between) )
  #if( $ctx.args.nameSurname.between.size() != 2 )
    $util.error(\\"Argument nameSurname.between expects exactly 2 elements.\\")
  #end
#if( !$util.isNull($ctx.args.nameSurname.between[0].name) ) #set( $sortKeyValue = \\"$ctx.args.nameSurname.between[0].name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.between[0].surname) ) #set( $sortKeyValue = \\"$sortKeyValue#$ctx.args.nameSurname.between[0].surname\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.between[1].name) ) #set( $sortKeyValue2 = \\"$ctx.args.nameSurname.between[1].name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.between[1].surname) ) #set( $sortKeyValue2 = \\"$sortKeyValue2#$ctx.args.nameSurname.between[1].surname\\" ) #end
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey BETWEEN :sortKey0 AND :sortKey1\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name#surname\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey0\\", { \\"S\\": \\"$sortKeyValue\\" }))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey1\\", { \\"S\\": \\"$sortKeyValue2\\" }))
#end
#if( !$util.isNull($ctx.args.nameSurname) && !$util.isNull($ctx.args.nameSurname.eq) )
#if( !$util.isNull($ctx.args.nameSurname.eq.name) ) #set( $sortKeyValue = \\"$ctx.args.nameSurname.eq.name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.eq.surname) ) #set( $sortKeyValue = \\"$sortKeyValue#$ctx.args.nameSurname.eq.surname\\" ) #end
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey = :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name#surname\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$sortKeyValue\\" }))
#end
#if( !$util.isNull($ctx.args.nameSurname) && !$util.isNull($ctx.args.nameSurname.lt) )
#if( !$util.isNull($ctx.args.nameSurname.lt.name) ) #set( $sortKeyValue = \\"$ctx.args.nameSurname.lt.name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.lt.surname) ) #set( $sortKeyValue = \\"$sortKeyValue#$ctx.args.nameSurname.lt.surname\\" ) #end
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey < :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name#surname\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$sortKeyValue\\" }))
#end
#if( !$util.isNull($ctx.args.nameSurname) && !$util.isNull($ctx.args.nameSurname.le) )
#if( !$util.isNull($ctx.args.nameSurname.le.name) ) #set( $sortKeyValue = \\"$ctx.args.nameSurname.le.name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.le.surname) ) #set( $sortKeyValue = \\"$sortKeyValue#$ctx.args.nameSurname.le.surname\\" ) #end
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey <= :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name#surname\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$sortKeyValue\\" }))
#end
#if( !$util.isNull($ctx.args.nameSurname) && !$util.isNull($ctx.args.nameSurname.gt) )
#if( !$util.isNull($ctx.args.nameSurname.gt.name) ) #set( $sortKeyValue = \\"$ctx.args.nameSurname.gt.name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.gt.surname) ) #set( $sortKeyValue = \\"$sortKeyValue#$ctx.args.nameSurname.gt.surname\\" ) #end
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey > :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name#surname\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$sortKeyValue\\" }))
#end
#if( !$util.isNull($ctx.args.nameSurname) && !$util.isNull($ctx.args.nameSurname.ge) )
#if( !$util.isNull($ctx.args.nameSurname.ge.name) ) #set( $sortKeyValue = \\"$ctx.args.nameSurname.ge.name\\" ) #end
#if( !$util.isNull($ctx.args.nameSurname.ge.surname) ) #set( $sortKeyValue = \\"$sortKeyValue#$ctx.args.nameSurname.ge.surname\\" ) #end
  #set( $modelQueryExpression.expression = \\"$modelQueryExpression.expression AND #sortKey >= :sortKey\\" )
  $util.qr($modelQueryExpression.expressionNames.put(\\"#sortKey\\", \\"name#surname\\"))
  $util.qr($modelQueryExpression.expressionValues.put(\\":sortKey\\", { \\"S\\": \\"$sortKeyValue\\" }))
#end


## [End] Applying Key Condition **
## [End] Set query expression for key **
$util.qr($ctx.stash.put(\\"modelQueryExpression\\", $modelQueryExpression))
{}",
  "Query.listUsers.req.vtl": "## [Start] List Request. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $limit = $util.defaultIfNull($args.limit, 100) )
#set( $ListRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"limit\\": $limit
} )
#if( $args.nextToken )
  #set( $ListRequest.nextToken = $args.nextToken )
#end
#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
  #set( $filter = $ctx.stash.authFilter )
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
  #end
#else
  #if( !$util.isNullOrEmpty($args.filter) )
    #set( $filter = $args.filter )
  #end
#end
#if( !$util.isNullOrEmpty($filter) )
  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
  #if( $util.isNullOrEmpty($filterExpression) )
    $util.error(\\"Unable to process the filter expression\\", \\"Unrecognized Filter\\")
  #end
  #if( !$util.isNullOrBlank($filterExpression.expression) )
    #if( $filterExpression.expressionValues.size() == 0 )
      $util.qr($filterExpression.remove(\\"expressionValues\\"))
    #end
    #set( $ListRequest.filter = $filterExpression )
  #end
#end
#if( !$util.isNull($ctx.stash.modelQueryExpression) && !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )
  $util.qr($ListRequest.put(\\"operation\\", \\"Query\\"))
  $util.qr($ListRequest.put(\\"query\\", $ctx.stash.modelQueryExpression))
  #if( !$util.isNull($args.sortDirection) && $args.sortDirection == \\"DESC\\" )
    #set( $ListRequest.scanIndexForward = false )
  #else
    #set( $ListRequest.scanIndexForward = true )
  #end
#else
  $util.qr($ListRequest.put(\\"operation\\", \\"Scan\\"))
#end
#if( !$util.isNull($ctx.stash.metadata.index) )
  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )
#end
$util.toJson($ListRequest)
## [End] List Request. **",
  "Query.listUsers.res.vtl": "## [Start] ResponseTemplate. **
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#else
  $util.toJson($ctx.result)
#end
## [End] ResponseTemplate. **",
  "Subscription.onCreateChild.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreateChild.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreateChild.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onCreateFriendship.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreateFriendship.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreateFriendship.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onCreateParent.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreateParent.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreateParent.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onCreatePost.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreatePost.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreatePost.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onCreatePostAuthor.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreatePostAuthor.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreatePostAuthor.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onCreatePostModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreatePostModel.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreatePostModel.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onCreateUser.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreateUser.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreateUser.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onCreateUserModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onCreateUserModel.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onCreateUserModel.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeleteChild.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeleteChild.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeleteChild.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeleteFriendship.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeleteFriendship.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeleteFriendship.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeleteParent.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeleteParent.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeleteParent.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeletePost.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeletePost.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeletePost.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeletePostAuthor.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeletePostAuthor.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeletePostAuthor.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeletePostModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeletePostModel.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeletePostModel.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeleteUser.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeleteUser.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeleteUser.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onDeleteUserModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onDeleteUserModel.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onDeleteUserModel.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdateChild.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdateChild.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdateChild.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdateFriendship.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdateFriendship.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdateFriendship.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdateParent.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdateParent.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdateParent.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdatePost.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdatePost.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdatePost.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdatePostAuthor.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdatePostAuthor.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdatePostAuthor.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdatePostModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdatePostModel.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdatePostModel.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdateUser.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdateUser.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdateUser.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "Subscription.onUpdateUserModel.postAuth.1.req.vtl": "## [Start] Sandbox Mode Disabled. **
#if( !$ctx.stash.get(\\"hasAuth\\") )
  $util.unauthorized()
#end
$util.toJson({})
## [End] Sandbox Mode Disabled. **",
  "Subscription.onUpdateUserModel.req.vtl": "## [Start] Subscription Request template. **
$util.toJson({
  \\"version\\": \\"2018-05-29\\",
  \\"payload\\": {}
})
## [End] Subscription Request template. **",
  "Subscription.onUpdateUserModel.res.vtl": "## [Start] Subscription Response template. **
#if( !$util.isNullOrEmpty($ctx.args.filter) )
$extensions.setSubscriptionFilter($util.transform.toSubscriptionFilter($ctx.args.filter))
#end
$util.toJson(null)
## [End] Subscription Response template. **",
  "User.friendships.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttributes.get(\\"id\\"), $ctx.source.id) )
#if( $util.isNull($partitionKeyValue) )
  #set( $result = {
  \\"items\\":   []
} )
  #return($result)
#else
  #set( $limit = $util.defaultIfNull($context.args.limit, 100) )
  #set( $sortKeyValue0 = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"name\\"), $ctx.source.name) )
  #set( $sortKeyValue1 = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"surname\\"), $ctx.source.surname) )
  #set( $query = {
  \\"expression\\": \\"#partitionKey = :partitionKey\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"friendID\\"
  },
  \\"expressionValues\\": {
      \\":partitionKey\\": $util.dynamodb.toDynamoDB($partitionKeyValue)
  }
} )
  #set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    #set( $filter = $ctx.stash.authFilter )
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
    #end
  #else
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = $args.filter )
    #end
  #end
  #if( !$util.isNullOrEmpty($filter) )
    #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
    #if( !$util.isNullOrBlank($filterExpression.expression) )
      #if( $filterExpression.expressionValues.size() == 0 )
        $util.qr($filterExpression.remove(\\"expressionValues\\"))
      #end
      #set( $filter = $filterExpression )
    #end
  #end
{
      \\"version\\": \\"2018-05-29\\",
      \\"operation\\": \\"Query\\",
      \\"query\\":     $util.toJson($query),
      \\"scanIndexForward\\":     #if( $context.args.sortDirection )
      #if( $context.args.sortDirection == \\"ASC\\" )
true
      #else
false
      #end
    #else
true
    #end,
      \\"filter\\":     #if( $filter )
$util.toJson($filter)
    #else
null
    #end,
      \\"limit\\": $limit,
      \\"nextToken\\":     #if( $context.args.nextToken )
$util.toJson($context.args.nextToken)
    #else
null
    #end,
      \\"index\\": \\"gsi-User.friendships\\"
  }
#end",
  "User.friendships.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$result )
    #set( $result = $ctx.result )
  #end
  $util.toJson($result)
#end",
  "User.post.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"postID\\"), $ctx.source.postID) )
#if( $util.isNull($partitionKeyValue) )
  #return
#else
  #set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
  $util.qr($GetRequest.put(\\"query\\", {
  \\"expression\\": \\"#partitionKey = :partitionValue\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"id\\"
  },
  \\"expressionValues\\": {
      \\":partitionValue\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($partitionKeyValue, \\"___xamznone____\\")))
  }
}))
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
  #end
  $util.toJson($GetRequest)
#end",
  "User.post.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
    $util.toJson($ctx.result.items[0])
  #else
    #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
    #end
    $util.toJson(null)
  #end
#end",
  "User.postModel.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttributes.get(\\"id\\"), $ctx.source.id) )
#if( $util.isNull($partitionKeyValue) )
  #set( $result = {
  \\"items\\":   []
} )
  #return($result)
#else
  #set( $sortKeyValue0 = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"name\\"), $ctx.source.name) )
  #set( $sortKeyValue1 = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"surname\\"), $ctx.source.surname) )
  #set( $query = {
  \\"expression\\": \\"#partitionKey = :partitionKey\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"authorID\\"
  },
  \\"expressionValues\\": {
      \\":partitionKey\\": $util.dynamodb.toDynamoDB($partitionKeyValue)
  }
} )
  #set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    #set( $filter = $ctx.stash.authFilter )
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
    #end
  #else
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = $args.filter )
    #end
  #end
  #if( !$util.isNullOrEmpty($filter) )
    #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
    #if( !$util.isNullOrBlank($filterExpression.expression) )
      #if( $filterExpression.expressionValues.size() == 0 )
        $util.qr($filterExpression.remove(\\"expressionValues\\"))
      #end
      #set( $filter = $filterExpression )
    #end
  #end
{
      \\"version\\": \\"2018-05-29\\",
      \\"operation\\": \\"Query\\",
      \\"query\\":     $util.toJson($query),
      \\"scanIndexForward\\":     #if( $context.args.sortDirection )
      #if( $context.args.sortDirection == \\"ASC\\" )
true
      #else
false
      #end
    #else
true
    #end,
      \\"filter\\":     #if( $filter )
$util.toJson($filter)
    #else
null
    #end,
      \\"limit\\": $limit,
      \\"nextToken\\":     #if( $context.args.nextToken )
$util.toJson($context.args.nextToken)
    #else
null
    #end,
      \\"index\\": \\"gsi-User.postModel\\"
  }
#end",
  "User.postModel.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$result )
    #set( $result = $ctx.result )
  #end
  $util.toJson($result)
#end",
  "UserModel.authorPosts.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttributes.get(\\"id\\"), $ctx.source.id) )
#if( $util.isNull($partitionKeyValue) )
  #set( $result = {
  \\"items\\":   []
} )
  #return($result)
#else
  #set( $limit = $util.defaultIfNull($context.args.limit, 100) )
  #set( $sortKeyValue0 = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"rollNumber\\"), $ctx.source.rollNumber) )
  #set( $query = {
  \\"expression\\": \\"#partitionKey = :partitionKey\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"userModelID\\"
  },
  \\"expressionValues\\": {
      \\":partitionKey\\": $util.dynamodb.toDynamoDB($partitionKeyValue)
  }
} )
  #set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    #set( $filter = $ctx.stash.authFilter )
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = {
  \\"and\\":   [$filter, $args.filter]
} )
    #end
  #else
    #if( !$util.isNullOrEmpty($args.filter) )
      #set( $filter = $args.filter )
    #end
  #end
  #if( !$util.isNullOrEmpty($filter) )
    #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )
    #if( !$util.isNullOrBlank($filterExpression.expression) )
      #if( $filterExpression.expressionValues.size() == 0 )
        $util.qr($filterExpression.remove(\\"expressionValues\\"))
      #end
      #set( $filter = $filterExpression )
    #end
  #end
{
      \\"version\\": \\"2018-05-29\\",
      \\"operation\\": \\"Query\\",
      \\"query\\":     $util.toJson($query),
      \\"scanIndexForward\\":     #if( $context.args.sortDirection )
      #if( $context.args.sortDirection == \\"ASC\\" )
true
      #else
false
      #end
    #else
true
    #end,
      \\"filter\\":     #if( $filter )
$util.toJson($filter)
    #else
null
    #end,
      \\"limit\\": $limit,
      \\"nextToken\\":     #if( $context.args.nextToken )
$util.toJson($context.args.nextToken)
    #else
null
    #end,
      \\"index\\": \\"gsi-UserModel.authorPosts\\"
  }
#end",
  "UserModel.authorPosts.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$result )
    #set( $result = $ctx.result )
  #end
  $util.toJson($result)
#end",
  "UserModel.postModel.req.vtl": "#if( $ctx.stash.deniedField )
  #return($util.toJson(null))
#end
#set( $partitionKeyValue = $util.defaultIfNull($ctx.stash.connectionAttibutes.get(\\"postModelID\\"), $ctx.source.postModelID) )
#if( $util.isNull($partitionKeyValue) )
  #return
#else
  #set( $GetRequest = {
  \\"version\\": \\"2018-05-29\\",
  \\"operation\\": \\"Query\\"
} )
  $util.qr($GetRequest.put(\\"query\\", {
  \\"expression\\": \\"#partitionKey = :partitionValue\\",
  \\"expressionNames\\": {
      \\"#partitionKey\\": \\"id\\"
  },
  \\"expressionValues\\": {
      \\":partitionValue\\": $util.parseJson($util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($partitionKeyValue, \\"___xamznone____\\")))
  }
}))
  #if( !$util.isNullOrEmpty($ctx.stash.authFilter) )
    $util.qr($GetRequest.put(\\"filter\\", $util.parseJson($util.transform.toDynamoDBFilterExpression($ctx.stash.authFilter))))
  #end
  $util.toJson($GetRequest)
#end",
  "UserModel.postModel.res.vtl": "#if( $ctx.error )
$util.error($ctx.error.message, $ctx.error.type)
#else
  #if( !$ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
    $util.toJson($ctx.result.items[0])
  #else
    #if( $ctx.result.items.isEmpty() && $ctx.result.scannedCount == 1 )
$util.unauthorized()
    #end
    $util.toJson(null)
  #end
#end",
}
`;
