// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`verify generated templates 1`] = `"testFilePath/Mutation.createTomatoes.req.vtl"`;

exports[`verify generated templates 2`] = `
"#set( $cols = [] )
#set( $vals = [] )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.createTomatoesInput.keySet() )
  #set( $discard = $cols.add($entry) )
  #set( $discard = $vals.add(\\":$entry\\") )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.createTomatoesInput[$entry]))
#end
#set( $valStr = $vals.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
#set( $colStr = $cols.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"INSERT INTO Tomatoes $colStr VALUES $valStr\\", \\"SELECT * FROM Tomatoes WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates 3`] = `"testFilePath/Mutation.createTomatoes.res.vtl"`;

exports[`verify generated templates 4`] = `"$utils.toJson($utils.parseJson($utils.rds.toJsonString($ctx.result))[1][0])"`;

exports[`verify generated templates 5`] = `"testFilePath/Query.getTomatoes.req.vtl"`;

exports[`verify generated templates 6`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":Id\\", \\"$ctx.args.Id\\"))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Tomatoes WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates 7`] = `"testFilePath/Query.getTomatoes.res.vtl"`;

exports[`verify generated templates 8`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates 9`] = `"testFilePath/Mutation.updateTomatoes.req.vtl"`;

exports[`verify generated templates 10`] = `
"#set( $updateList = {} )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.updateTomatoesInput.keySet() )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.updateTomatoesInput[$entry]))
  #set( $discard = $updateList.put($entry, \\":$entry\\") )
#end
#set( $update = $updateList.toString().replace(\\"{\\",\\"\\").replace(\\"}\\",\\"\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"UPDATE Tomatoes SET $update WHERE Id=:Id\\", \\"SELECT * FROM Tomatoes WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates 11`] = `"testFilePath/Mutation.updateTomatoes.res.vtl"`;

exports[`verify generated templates 12`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.length() < 2 )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[1] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates 13`] = `"testFilePath/Mutation.deleteTomatoes.req.vtl"`;

exports[`verify generated templates 14`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":Id\\", \\"$ctx.args.Id\\"))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Tomatoes WHERE Id=:Id\\", \\"DELETE FROM Tomatoes WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates 15`] = `"testFilePath/Mutation.deleteTomatoes.res.vtl"`;

exports[`verify generated templates 16`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates 17`] = `"testFilePath/Query.listTomatoes.req.vtl"`;

exports[`verify generated templates 18`] = `
"{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Tomatoes\\"],
  \\"variableMap\\": {}
}"
`;

exports[`verify generated templates 19`] = `"testFilePath/Query.listTomatoes.res.vtl"`;

exports[`verify generated templates 20`] = `"$utils.toJson($utils.rds.toJsonObject($ctx.result)[0])"`;

exports[`verify generated templates using a Int primary key 1`] = `"testFilePath/Mutation.createApples.req.vtl"`;

exports[`verify generated templates using a Int primary key 2`] = `
"#set( $cols = [] )
#set( $vals = [] )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.createApplesInput.keySet() )
  #set( $discard = $cols.add($entry) )
  #set( $discard = $vals.add(\\":$entry\\") )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.createApplesInput[$entry]))
#end
#set( $valStr = $vals.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
#set( $colStr = $cols.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"INSERT INTO Apples $colStr VALUES $valStr\\", \\"SELECT * FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates using a Int primary key 3`] = `"testFilePath/Mutation.createApples.res.vtl"`;

exports[`verify generated templates using a Int primary key 4`] = `"$utils.toJson($utils.parseJson($utils.rds.toJsonString($ctx.result))[1][0])"`;

exports[`verify generated templates using a Int primary key 5`] = `"testFilePath/Query.getApples.req.vtl"`;

exports[`verify generated templates using a Int primary key 6`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":Id\\", $ctx.args.Id))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates using a Int primary key 7`] = `"testFilePath/Query.getApples.res.vtl"`;

exports[`verify generated templates using a Int primary key 8`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates using a Int primary key 9`] = `"testFilePath/Mutation.updateApples.req.vtl"`;

exports[`verify generated templates using a Int primary key 10`] = `
"#set( $updateList = {} )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.updateApplesInput.keySet() )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.updateApplesInput[$entry]))
  #set( $discard = $updateList.put($entry, \\":$entry\\") )
#end
#set( $update = $updateList.toString().replace(\\"{\\",\\"\\").replace(\\"}\\",\\"\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"UPDATE Apples SET $update WHERE Id=:Id\\", \\"SELECT * FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates using a Int primary key 11`] = `"testFilePath/Mutation.updateApples.res.vtl"`;

exports[`verify generated templates using a Int primary key 12`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.length() < 2 )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[1] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates using a Int primary key 13`] = `"testFilePath/Mutation.deleteApples.req.vtl"`;

exports[`verify generated templates using a Int primary key 14`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":Id\\", $ctx.args.Id))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Apples WHERE Id=:Id\\", \\"DELETE FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates using a Int primary key 15`] = `"testFilePath/Mutation.deleteApples.res.vtl"`;

exports[`verify generated templates using a Int primary key 16`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates using a Int primary key 17`] = `"testFilePath/Query.listApples.req.vtl"`;

exports[`verify generated templates using a Int primary key 18`] = `
"{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Apples\\"],
  \\"variableMap\\": {}
}"
`;

exports[`verify generated templates using a Int primary key 19`] = `"testFilePath/Query.listApples.res.vtl"`;

exports[`verify generated templates using a Int primary key 20`] = `"$utils.toJson($utils.rds.toJsonObject($ctx.result)[0])"`;

exports[`verify generated templates with non-id named primary key 1`] = `"testFilePath/Mutation.createTomatoes.req.vtl"`;

exports[`verify generated templates with non-id named primary key 2`] = `
"#set( $cols = [] )
#set( $vals = [] )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.createTomatoesInput.keySet() )
  #set( $discard = $cols.add($entry) )
  #set( $discard = $vals.add(\\":$entry\\") )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.createTomatoesInput[$entry]))
#end
#set( $valStr = $vals.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
#set( $colStr = $cols.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"INSERT INTO Tomatoes $colStr VALUES $valStr\\", \\"SELECT * FROM Tomatoes WHERE tomatoId=:tomatoId\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with non-id named primary key 3`] = `"testFilePath/Mutation.createTomatoes.res.vtl"`;

exports[`verify generated templates with non-id named primary key 4`] = `"$utils.toJson($utils.parseJson($utils.rds.toJsonString($ctx.result))[1][0])"`;

exports[`verify generated templates with non-id named primary key 5`] = `"testFilePath/Query.getTomatoes.req.vtl"`;

exports[`verify generated templates with non-id named primary key 6`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":tomatoId\\", \\"$ctx.args.tomatoId\\"))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Tomatoes WHERE tomatoId=:tomatoId\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with non-id named primary key 7`] = `"testFilePath/Query.getTomatoes.res.vtl"`;

exports[`verify generated templates with non-id named primary key 8`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates with non-id named primary key 9`] = `"testFilePath/Mutation.updateTomatoes.req.vtl"`;

exports[`verify generated templates with non-id named primary key 10`] = `
"#set( $updateList = {} )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.updateTomatoesInput.keySet() )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.updateTomatoesInput[$entry]))
  #set( $discard = $updateList.put($entry, \\":$entry\\") )
#end
#set( $update = $updateList.toString().replace(\\"{\\",\\"\\").replace(\\"}\\",\\"\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"UPDATE Tomatoes SET $update WHERE tomatoId=:tomatoId\\", \\"SELECT * FROM Tomatoes WHERE tomatoId=:tomatoId\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with non-id named primary key 11`] = `"testFilePath/Mutation.updateTomatoes.res.vtl"`;

exports[`verify generated templates with non-id named primary key 12`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.length() < 2 )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[1] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates with non-id named primary key 13`] = `"testFilePath/Mutation.deleteTomatoes.req.vtl"`;

exports[`verify generated templates with non-id named primary key 14`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":tomatoId\\", \\"$ctx.args.tomatoId\\"))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Tomatoes WHERE tomatoId=:tomatoId\\", \\"DELETE FROM Tomatoes WHERE tomatoId=:tomatoId\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with non-id named primary key 15`] = `"testFilePath/Mutation.deleteTomatoes.res.vtl"`;

exports[`verify generated templates with non-id named primary key 16`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates with non-id named primary key 17`] = `"testFilePath/Query.listTomatoes.req.vtl"`;

exports[`verify generated templates with non-id named primary key 18`] = `
"{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Tomatoes\\"],
  \\"variableMap\\": {}
}"
`;

exports[`verify generated templates with non-id named primary key 19`] = `"testFilePath/Query.listTomatoes.res.vtl"`;

exports[`verify generated templates with non-id named primary key 20`] = `"$utils.toJson($utils.rds.toJsonObject($ctx.result)[0])"`;

exports[`verify generated templates with old pluralization 1`] = `"testFilePath/Mutation.createApples.req.vtl"`;

exports[`verify generated templates with old pluralization 2`] = `
"#set( $cols = [] )
#set( $vals = [] )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.createApplesInput.keySet() )
  #set( $discard = $cols.add($entry) )
  #set( $discard = $vals.add(\\":$entry\\") )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.createApplesInput[$entry]))
#end
#set( $valStr = $vals.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
#set( $colStr = $cols.toString().replace(\\"[\\",\\"(\\").replace(\\"]\\",\\")\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"INSERT INTO Apples $colStr VALUES $valStr\\", \\"SELECT * FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with old pluralization 3`] = `"testFilePath/Mutation.createApples.res.vtl"`;

exports[`verify generated templates with old pluralization 4`] = `"$utils.toJson($utils.parseJson($utils.rds.toJsonString($ctx.result))[1][0])"`;

exports[`verify generated templates with old pluralization 5`] = `"testFilePath/Query.getApples.req.vtl"`;

exports[`verify generated templates with old pluralization 6`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":Id\\", $ctx.args.Id))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with old pluralization 7`] = `"testFilePath/Query.getApples.res.vtl"`;

exports[`verify generated templates with old pluralization 8`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates with old pluralization 9`] = `"testFilePath/Mutation.updateApples.req.vtl"`;

exports[`verify generated templates with old pluralization 10`] = `
"#set( $updateList = {} )
#set( $variableMap = {} )
#foreach( $entry in $ctx.args.updateApplesInput.keySet() )
  $util.qr($variableMap.put(\\":$entry\\", $ctx.args.updateApplesInput[$entry]))
  #set( $discard = $updateList.put($entry, \\":$entry\\") )
#end
#set( $update = $updateList.toString().replace(\\"{\\",\\"\\").replace(\\"}\\",\\"\\") )
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"UPDATE Apples SET $update WHERE Id=:Id\\", \\"SELECT * FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with old pluralization 11`] = `"testFilePath/Mutation.updateApples.res.vtl"`;

exports[`verify generated templates with old pluralization 12`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.length() < 2 )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[1] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates with old pluralization 13`] = `"testFilePath/Mutation.deleteApples.req.vtl"`;

exports[`verify generated templates with old pluralization 14`] = `
"#set( $variableMap = {} )
$util.qr($variableMap.put(\\":Id\\", $ctx.args.Id))
{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Apples WHERE Id=:Id\\", \\"DELETE FROM Apples WHERE Id=:Id\\"],
  \\"variableMap\\":   $util.toJson($variableMap)
}"
`;

exports[`verify generated templates with old pluralization 15`] = `"testFilePath/Mutation.deleteApples.res.vtl"`;

exports[`verify generated templates with old pluralization 16`] = `
"#set( $output = $utils.rds.toJsonObject($ctx.result) )
#if( $output.isEmpty() )
  $util.error(\\"Invalid response from RDS DataSource. See info for the full response.\\", \\"InvalidResponse\\", {}, $output)
#end
#set( $output = $output[0] )
#if( $output.isEmpty() )
  #return
#end
$utils.toJson($output[0])"
`;

exports[`verify generated templates with old pluralization 17`] = `"testFilePath/Query.listAppless.req.vtl"`;

exports[`verify generated templates with old pluralization 18`] = `
"{
  \\"version\\": \\"2018-05-29\\",
  \\"statements\\":   [\\"SELECT * FROM Apples\\"],
  \\"variableMap\\": {}
}"
`;

exports[`verify generated templates with old pluralization 19`] = `"testFilePath/Query.listAppless.res.vtl"`;

exports[`verify generated templates with old pluralization 20`] = `"$utils.toJson($utils.rds.toJsonObject($ctx.result)[0])"`;
